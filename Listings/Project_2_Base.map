Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    control.o(i.Control_DutyCycle_Handler) refers to timers.o(i.PWM_Set_Value) for PWM_Set_Value
    control.o(i.Control_DutyCycle_Handler) refers to control.o(.data) for .data
    control.o(i.Control_HBLED) refers to aeabi_sdivfast.o(.text) for __aeabi_idivmod
    control.o(i.Control_HBLED) refers to fflti.o(.text) for __aeabi_i2f
    control.o(i.Control_HBLED) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    control.o(i.Control_HBLED) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    control.o(i.Control_HBLED) refers to frlef.o(x$fpl$frleqf) for __aeabi_cfrcmple
    control.o(i.Control_HBLED) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    control.o(i.Control_HBLED) refers to ffixi.o(.text) for __aeabi_f2iz
    control.o(i.Control_HBLED) refers to fx.o(i.Multiply_FX) for Multiply_FX
    control.o(i.Control_HBLED) refers to fx.o(i.Add_FX) for Add_FX
    control.o(i.Control_HBLED) refers to fx.o(i.Subtract_FX) for Subtract_FX
    control.o(i.Control_HBLED) refers to timers.o(i.PWM_Set_Value) for PWM_Set_Value
    control.o(i.Control_HBLED) refers to control.o(.data) for .data
    control.o(i.Control_HBLED) refers to control.o(.bss) for .bss
    control.o(i.Control_HBLED) refers to ui.o(.data) for g_holdoff
    control.o(i.Control_HBLED) refers to main.o(.data) for control_mode
    control.o(i.Init_Buck_HBLED) refers to timers.o(i.PWM_Init) for PWM_Init
    control.o(i.Init_Buck_HBLED) refers to control.o(.data) for .data
    control.o(i.Old_Update_Set_Current) refers to fflti.o(.text) for __aeabi_ui2f
    control.o(i.Old_Update_Set_Current) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    control.o(i.Old_Update_Set_Current) refers to ffixui.o(.text) for __aeabi_f2uiz
    control.o(i.Old_Update_Set_Current) refers to control.o(.data) for .data
    control.o(i.Set_DAC_mA) refers to fflti.o(.text) for __aeabi_ui2f
    control.o(i.Set_DAC_mA) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    control.o(i.Set_DAC_mA) refers to ffixui.o(.text) for __aeabi_f2uiz
    control.o(i.Set_DAC_mA) refers to control.o(.data) for .data
    control.o(i.UpdatePID) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    control.o(i.UpdatePID) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    control.o(i.UpdatePID) refers to frlef.o(x$fpl$frleqf) for __aeabi_cfrcmple
    control.o(i.UpdatePID) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    control.o(i.UpdatePID_FX) refers to fx.o(i.Multiply_FX) for Multiply_FX
    control.o(i.UpdatePID_FX) refers to fx.o(i.Add_FX) for Add_FX
    control.o(i.UpdatePID_FX) refers to fx.o(i.Subtract_FX) for Subtract_FX
    control.o(i.Update_Set_Current) refers to fflti.o(.text) for __aeabi_ui2f
    control.o(i.Update_Set_Current) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    control.o(i.Update_Set_Current) refers to ffixui.o(.text) for __aeabi_f2uiz
    control.o(i.Update_Set_Current) refers to control.o(.data) for .data
    dma.o(i.Configure_DMA_For_Playback) refers to dma.o(.data) for .data
    dma.o(i.DMA0_IRQHandler) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    dma.o(i.DMA0_IRQHandler) refers to leds.o(i.Control_RGB_LEDs) for Control_RGB_LEDs
    dma.o(i.DMA0_IRQHandler) refers to timers.o(i.TPM0_Start) for TPM0_Start
    dma.o(i.DMA0_IRQHandler) refers to dma.o(.data) for .data
    dma.o(i.DMA0_IRQHandler) refers to threads.o(.data) for t_Refill_Sound_Buffer
    dma.o(i.Start_DMA_Playback) refers to timers.o(i.TPM0_Start) for TPM0_Start
    dma.o(i.Start_DMA_Playback) refers to dma.o(.data) for .data
    fx.o(i.Multiply_FX) refers to llmul.o(.text) for __aeabi_lmul
    main.o(i.main) refers to debug.o(i.Init_Debug_Signals) for Init_Debug_Signals
    main.o(i.main) refers to leds.o(i.Init_RGB_LEDs) for Init_RGB_LEDs
    main.o(i.main) refers to leds.o(i.Control_RGB_LEDs) for Control_RGB_LEDs
    main.o(i.main) refers to sound.o(i.Sound_Disable_Amp) for Sound_Disable_Amp
    main.o(i.main) refers to st7789.o(i.LCD_Init) for LCD_Init
    main.o(i.main) refers to lcd_text.o(i.LCD_Text_Init) for LCD_Text_Init
    main.o(i.main) refers to lcd_text.o(i.LCD_Erase) for LCD_Erase
    main.o(i.main) refers to lcd_text.o(i.LCD_Text_PrintStr_RC) for LCD_Text_PrintStr_RC
    main.o(i.main) refers to delay.o(i.Delay) for Delay
    main.o(i.main) refers to control.o(i.Init_Buck_HBLED) for Init_Buck_HBLED
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to fault.o(i.Fault_Init) for Fault_Init
    main.o(i.main) refers to threads.o(i.Create_OS_Objects) for Create_OS_Objects
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    sound.o(i.Init_Voices) refers to sound.o(.bss) for .bss
    sound.o(i.Init_Waveform) refers to sound.o(.bss) for .bss
    sound.o(i.Play_Tone) refers to delay.o(i.ShortDelay) for ShortDelay
    sound.o(i.Play_Tone) refers to delay.o(i.Delay) for Delay
    sound.o(i.Play_Tone) refers to sound.o(.constdata) for .constdata
    sound.o(i.Play_Waveform_with_DMA) refers to dma.o(i.Configure_DMA_For_Playback) for Configure_DMA_For_Playback
    sound.o(i.Play_Waveform_with_DMA) refers to dma.o(i.Start_DMA_Playback) for Start_DMA_Playback
    sound.o(i.Play_Waveform_with_DMA) refers to sound.o(.bss) for .bss
    sound.o(i.SineTable_Init) refers to dflti.o(.text) for __aeabi_i2d
    sound.o(i.SineTable_Init) refers to dmul.o(.text) for __aeabi_dmul
    sound.o(i.SineTable_Init) refers to d2f.o(.text) for __aeabi_d2f
    sound.o(i.SineTable_Init) refers to sinf.o(i.sinf) for sinf
    sound.o(i.SineTable_Init) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    sound.o(i.SineTable_Init) refers to ffixi.o(.text) for __aeabi_f2iz
    sound.o(i.SineTable_Init) refers to sound.o(.bss) for .bss
    sound.o(i.Sound_Generate_Next_Sample) refers to sound.o(.bss) for .bss
    sound.o(i.Sound_Init) refers to dflti.o(.text) for __aeabi_i2d
    sound.o(i.Sound_Init) refers to dmul.o(.text) for __aeabi_dmul
    sound.o(i.Sound_Init) refers to d2f.o(.text) for __aeabi_d2f
    sound.o(i.Sound_Init) refers to sinf.o(i.sinf) for sinf
    sound.o(i.Sound_Init) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    sound.o(i.Sound_Init) refers to ffixi.o(.text) for __aeabi_f2iz
    sound.o(i.Sound_Init) refers to dma.o(i.DMA_Init) for DMA_Init
    sound.o(i.Sound_Init) refers to timers.o(i.TPM0_Init) for TPM0_Init
    sound.o(i.Sound_Init) refers to timers.o(i.Configure_TPM0_for_DMA) for Configure_TPM0_for_DMA
    sound.o(i.Sound_Init) refers to sound.o(.bss) for .bss
    sound.o(i.Sound_Init) refers to sound.o(.data) for .data
    sound.o(i.Thread_Refill_Sound_Buffer) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    sound.o(i.Thread_Refill_Sound_Buffer) refers to sound.o(.data) for .data
    sound.o(i.Thread_Refill_Sound_Buffer) refers to sound.o(.bss) for .bss
    sound.o(i.Thread_Sound_Manager) refers to fflti.o(.text) for __aeabi_ui2f
    sound.o(i.Thread_Sound_Manager) refers to fdiv.o(.text) for __aeabi_fdiv
    sound.o(i.Thread_Sound_Manager) refers to ffixui.o(.text) for __aeabi_f2uiz
    sound.o(i.Thread_Sound_Manager) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    sound.o(i.Thread_Sound_Manager) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    sound.o(i.Thread_Sound_Manager) refers to dma.o(i.Configure_DMA_For_Playback) for Configure_DMA_For_Playback
    sound.o(i.Thread_Sound_Manager) refers to dma.o(i.Start_DMA_Playback) for Start_DMA_Playback
    sound.o(i.Thread_Sound_Manager) refers to rtx_delay.o(.text.osDelay) for osDelay
    sound.o(i.Thread_Sound_Manager) refers to sound.o(.bss) for .bss
    sound.o(i.Thread_Sound_Manager) refers to threads.o(.data) for t_Refill_Sound_Buffer
    threads.o(i.Create_OS_Objects) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    threads.o(i.Create_OS_Objects) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    threads.o(i.Create_OS_Objects) refers to threads.o(.constdata) for .constdata
    threads.o(i.Create_OS_Objects) refers to threads.o(.data) for .data
    threads.o(i.Create_OS_Objects) refers to threads.o(i.Thread_Read_TS) for Thread_Read_TS
    threads.o(i.Create_OS_Objects) refers to threads.o(i.Thread_Update_Screen) for Thread_Update_Screen
    threads.o(i.Create_OS_Objects) refers to threads.o(i.Thread_Buck_Update_Setpoint) for Thread_Buck_Update_Setpoint
    threads.o(i.Thread_Buck_Update_Setpoint) refers to rtx_delay.o(.text.osDelay) for osDelay
    threads.o(i.Thread_Buck_Update_Setpoint) refers to control.o(i.Update_Set_Current) for Update_Set_Current
    threads.o(i.Thread_Read_TS) refers to touchscreen.o(i.LCD_TS_Read) for LCD_TS_Read
    threads.o(i.Thread_Read_TS) refers to ui.o(i.UI_Process_Touch) for UI_Process_Touch
    threads.o(i.Thread_Read_TS) refers to rtx_delay.o(.text.osDelay) for osDelay
    threads.o(i.Thread_Update_Screen) refers to ui.o(i.UI_Draw_Screen) for UI_Draw_Screen
    threads.o(i.Thread_Update_Screen) refers to rtx_delay.o(.text.osDelay) for osDelay
    threads.o(.constdata) refers to threads.o(.conststring) for .conststring
    timers.o(i.PIT_IRQHandler) refers to profile.o(.data) for profiling_enabled
    timers.o(i.PIT_IRQHandler) refers to timers.o(.data) for .data
    timers.o(i.PIT_IRQHandler) refers to profile.o(.data) for profile_samples
    timers.o(i.PIT_IRQHandler) refers to region.o(.constdata) for NumProfileRegions
    timers.o(i.PIT_IRQHandler) refers to region.o(.constdata) for RegionTable
    timers.o(i.PIT_IRQHandler) refers to region.o(.data) for RegionCount
    timers.o(i.PIT_IRQHandler) refers to profile.o(.data) for adx_lost
    timers.o(i.PIT_IRQHandler) refers to profile.o(.data) for num_lost
    timers.o(i.TPM0_IRQHandler) refers to timers.o(.data) for .data
    ui.o(i.UI_Draw_Fields) refers to lcd_text.o(i.LCD_Text_Set_Colors) for LCD_Text_Set_Colors
    ui.o(i.UI_Draw_Fields) refers to lcd_text.o(i.LCD_Text_PrintStr_RC) for LCD_Text_PrintStr_RC
    ui.o(i.UI_Draw_Fields) refers to colors.o(.data) for light_gray
    ui.o(i.UI_Draw_Fields) refers to colors.o(.data) for dark_red
    ui.o(i.UI_Draw_Scope) refers to st7789.o(i.LCD_Fill_Rectangle) for LCD_Fill_Rectangle
    ui.o(i.UI_Draw_Scope) refers to lcd_graphics.o(i.LCD_Draw_Line) for LCD_Draw_Line
    ui.o(i.UI_Draw_Scope) refers to aeabi_sdivfast.o(.text) for __aeabi_idivmod
    ui.o(i.UI_Draw_Scope) refers to st7789.o(i.LCD_Plot_Pixel) for LCD_Plot_Pixel
    ui.o(i.UI_Draw_Scope) refers to dflti.o(.text) for __aeabi_i2d
    ui.o(i.UI_Draw_Scope) refers to dmul.o(.text) for __aeabi_dmul
    ui.o(i.UI_Draw_Scope) refers to dfixi.o(.text) for __aeabi_d2iz
    ui.o(i.UI_Draw_Scope) refers to ui.o(.data) for .data
    ui.o(i.UI_Draw_Scope) refers to colors.o(.data) for black
    ui.o(i.UI_Draw_Scope) refers to colors.o(.data) for red
    ui.o(i.UI_Draw_Scope) refers to control.o(.bss) for g_set_sample
    ui.o(i.UI_Draw_Scope) refers to colors.o(.data) for light_blue
    ui.o(i.UI_Draw_Scope) refers to colors.o(.data) for yellow
    ui.o(i.UI_Draw_Screen) refers to _printf_pad.o(.text) for _printf_pre_padding
    ui.o(i.UI_Draw_Screen) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    ui.o(i.UI_Draw_Screen) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    ui.o(i.UI_Draw_Screen) refers to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    ui.o(i.UI_Draw_Screen) refers to _printf_dec.o(.text) for _printf_int_dec
    ui.o(i.UI_Draw_Screen) refers to _printf_str.o(.text) for _printf_str
    ui.o(i.UI_Draw_Screen) refers to ui.o(i.UI_Update_Field_Values) for UI_Update_Field_Values
    ui.o(i.UI_Draw_Screen) refers to noretval__2snprintf.o(.text) for __2snprintf
    ui.o(i.UI_Draw_Screen) refers to lcd_text.o(i.LCD_Text_Set_Colors) for LCD_Text_Set_Colors
    ui.o(i.UI_Draw_Screen) refers to lcd_text.o(i.LCD_Text_PrintStr_RC) for LCD_Text_PrintStr_RC
    ui.o(i.UI_Draw_Screen) refers to st7789.o(i.LCD_Fill_Rectangle) for LCD_Fill_Rectangle
    ui.o(i.UI_Draw_Screen) refers to ui.o(i.UI_Draw_Scope) for UI_Draw_Scope
    ui.o(i.UI_Draw_Screen) refers to ui.o(.data) for .data
    ui.o(i.UI_Draw_Screen) refers to colors.o(.data) for light_gray
    ui.o(i.UI_Draw_Screen) refers to colors.o(.data) for dark_red
    ui.o(i.UI_Draw_Screen) refers to control.o(.data) for g_disp_buffer
    ui.o(i.UI_Draw_Slider) refers to st7789.o(i.LCD_Fill_Rectangle) for LCD_Fill_Rectangle
    ui.o(i.UI_Draw_Slider) refers to ui.o(.data) for .data
    ui.o(i.UI_Identify_Field) refers to strlen.o(.text) for strlen
    ui.o(i.UI_Identify_Field) refers to ui.o(.data) for .data
    ui.o(i.UI_Identify_Field) refers to lcd_text.o(.data) for G_LCD_char_width
    ui.o(i.UI_Process_Touch) refers to ui.o(i.UI_Identify_Field) for UI_Identify_Field
    ui.o(i.UI_Process_Touch) refers to ui.o(i.UI_Update_Field_Values) for UI_Update_Field_Values
    ui.o(i.UI_Process_Touch) refers to ui.o(.data) for .data
    ui.o(i.UI_Update_Field_Selects) refers to ui.o(.data) for .data
    ui.o(i.UI_Update_Field_Values) refers to _printf_pad.o(.text) for _printf_pre_padding
    ui.o(i.UI_Update_Field_Values) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    ui.o(i.UI_Update_Field_Values) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    ui.o(i.UI_Update_Field_Values) refers to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    ui.o(i.UI_Update_Field_Values) refers to _printf_dec.o(.text) for _printf_int_dec
    ui.o(i.UI_Update_Field_Values) refers to _printf_str.o(.text) for _printf_str
    ui.o(i.UI_Update_Field_Values) refers to noretval__2snprintf.o(.text) for __2snprintf
    ui.o(i.UI_Update_Volatile_Field_Values) refers to _printf_pad.o(.text) for _printf_pre_padding
    ui.o(i.UI_Update_Volatile_Field_Values) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    ui.o(i.UI_Update_Volatile_Field_Values) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    ui.o(i.UI_Update_Volatile_Field_Values) refers to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    ui.o(i.UI_Update_Volatile_Field_Values) refers to _printf_dec.o(.text) for _printf_int_dec
    ui.o(i.UI_Update_Volatile_Field_Values) refers to _printf_str.o(.text) for _printf_str
    ui.o(i.UI_Update_Volatile_Field_Values) refers to noretval__2snprintf.o(.text) for __2snprintf
    ui.o(i.UI_Update_Volatile_Field_Values) refers to ui.o(i.UI_Update_Field_Values) for i.UI_Update_Field_Values
    ui.o(.data) refers to control.o(.data) for g_duty_cycle
    ui.o(.data) refers to colors.o(.data) for green
    ui.o(.data) refers to colors.o(.data) for black
    ui.o(.data) refers to control.o(i.Control_DutyCycle_Handler) for Control_DutyCycle_Handler
    ui.o(.data) refers to control.o(i.Control_OnOff_Handler) for Control_OnOff_Handler
    ui.o(.data) refers to control.o(i.Control_IntNonNegative_Handler) for Control_IntNonNegative_Handler
    ui.o(.data) refers to colors.o(.data) for orange
    ui.o(.data) refers to colors.o(.data) for white
    ui.o(.data) refers to colors.o(.data) for dark_gray
    ui.o(.data) refers to colors.o(.data) for light_gray
    adc.o(i.ADC0_IRQHandler) refers to control.o(i.Control_HBLED) for Control_HBLED
    adc.o(i.ADC0_IRQHandler) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    adc.o(i.ADC0_IRQHandler) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    adc.o(i.ADC0_IRQHandler) refers to adc.o(.data) for .data
    adc.o(i.Init_ADC) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    adc.o(i.Init_ADC) refers to adc.o(.data) for .data
    adc.o(i.request_conversion) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    adc.o(i.request_conversion) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    adc.o(i.request_conversion) refers to adc.o(.data) for .data
    fault.o(i.Fault_Fill_Queue) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    fault.o(i.Fault_Fill_Queue) refers to adc.o(.data) for ADC_RequestQueue
    fault.o(i.Fault_Init) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    fault.o(i.Fault_Init) refers to fault.o(.constdata) for .constdata
    fault.o(i.Fault_Init) refers to fault.o(i.Thread_Fault_Injector) for Thread_Fault_Injector
    fault.o(i.Fault_Init) refers to fault.o(.data) for .data
    fault.o(i.Test_Fault) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    fault.o(i.Test_Fault) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    fault.o(i.Test_Fault) refers to rtx_kernel.o(.text.osKernelLock) for osKernelLock
    fault.o(i.Test_Fault) refers to fault.o(i.Fault_Recursion_Test) for Fault_Recursion_Test
    fault.o(i.Test_Fault) refers to rtx_delay.o(.text.osDelay) for osDelay
    fault.o(i.Test_Fault) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    fault.o(i.Test_Fault) refers to rtx_thread.o(.text.osThreadSetPriority) for osThreadSetPriority
    fault.o(i.Test_Fault) refers to control.o(.data) for g_set_current
    fault.o(i.Test_Fault) refers to threads.o(.data) for LCD_mutex
    fault.o(i.Test_Fault) refers to adc.o(.data) for ADC_RequestQueue
    fault.o(i.Thread_Fault_Injector) refers to _printf_pad.o(.text) for _printf_pre_padding
    fault.o(i.Thread_Fault_Injector) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    fault.o(i.Thread_Fault_Injector) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    fault.o(i.Thread_Fault_Injector) refers to _printf_dec.o(.text) for _printf_int_dec
    fault.o(i.Thread_Fault_Injector) refers to rtx_delay.o(.text.osDelay) for osDelay
    fault.o(i.Thread_Fault_Injector) refers to leds.o(i.Control_RGB_LEDs) for Control_RGB_LEDs
    fault.o(i.Thread_Fault_Injector) refers to noretval__2sprintf.o(.text) for __2sprintf
    fault.o(i.Thread_Fault_Injector) refers to lcd_text.o(i.LCD_Text_Set_Colors) for LCD_Text_Set_Colors
    fault.o(i.Thread_Fault_Injector) refers to lcd_text.o(i.LCD_Text_PrintStr_RC) for LCD_Text_PrintStr_RC
    fault.o(i.Thread_Fault_Injector) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    fault.o(i.Thread_Fault_Injector) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    fault.o(i.Thread_Fault_Injector) refers to rtx_kernel.o(.text.osKernelLock) for osKernelLock
    fault.o(i.Thread_Fault_Injector) refers to fault.o(i.Fault_Recursion_Test) for Fault_Recursion_Test
    fault.o(i.Thread_Fault_Injector) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    fault.o(i.Thread_Fault_Injector) refers to rtx_thread.o(.text.osThreadSetPriority) for osThreadSetPriority
    fault.o(i.Thread_Fault_Injector) refers to fault.o(.data) for .data
    fault.o(i.Thread_Fault_Injector) refers to colors.o(.data) for red
    fault.o(i.Thread_Fault_Injector) refers to colors.o(.data) for yellow
    fault.o(i.Thread_Fault_Injector) refers to control.o(.data) for g_set_current
    fault.o(i.Thread_Fault_Injector) refers to threads.o(.data) for LCD_mutex
    fault.o(i.Thread_Fault_Injector) refers to adc.o(.data) for ADC_RequestQueue
    lcd_graphics.o(i.Graphics_Test) refers to st7789.o(i.LCD_Fill_Buffer) for LCD_Fill_Buffer
    lcd_graphics.o(i.Graphics_Test) refers to st7789.o(i.LCD_Refresh) for LCD_Refresh
    lcd_graphics.o(i.Graphics_Test) refers to st7789.o(i.LCD_Plot_Pixel) for LCD_Plot_Pixel
    lcd_graphics.o(i.Graphics_Test) refers to lcd_graphics.o(i.LCD_Draw_Line) for LCD_Draw_Line
    lcd_graphics.o(i.Graphics_Test) refers to lcd_graphics.o(i.LCD_Draw_Circle) for LCD_Draw_Circle
    lcd_graphics.o(i.Graphics_Test) refers to aeabi_sdivfast.o(.text) for __aeabi_idivmod
    lcd_graphics.o(i.LCD_Draw_Circle) refers to lcd_graphics.o(i.LCD_Draw_Line) for LCD_Draw_Line
    lcd_graphics.o(i.LCD_Draw_Circle) refers to st7789.o(i.LCD_Plot_Pixel) for LCD_Plot_Pixel
    lcd_graphics.o(i.LCD_Draw_Line) refers to st7789.o(i.LCD_Plot_Pixel) for LCD_Plot_Pixel
    lcd_graphics.o(i.LCD_Draw_Line) refers to aeabi_sdivfast.o(.text) for __aeabi_idivmod
    lcd_text.o(i.LCD_Erase) refers to st7789.o(i.LCD_Fill_Buffer) for LCD_Fill_Buffer
    lcd_text.o(i.LCD_Erase) refers to lcd_text.o(.data) for .data
    lcd_text.o(i.LCD_Text_GetGlyphWidth) refers to lcd_text.o(.data) for .data
    lcd_text.o(i.LCD_Text_Init) refers to lucida_12x19.o(.constdata) for Lucida_Console12x19
    lcd_text.o(i.LCD_Text_Init) refers to lcd_text.o(.data) for .data
    lcd_text.o(i.LCD_Text_PrintChar) refers to st7789.o(i.LCD_Start_Rectangle) for LCD_Start_Rectangle
    lcd_text.o(i.LCD_Text_PrintChar) refers to st7789.o(i.LCD_Write_Rectangle_Pixel) for LCD_Write_Rectangle_Pixel
    lcd_text.o(i.LCD_Text_PrintChar) refers to lcd_text.o(.data) for .data
    lcd_text.o(i.LCD_Text_PrintStr) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    lcd_text.o(i.LCD_Text_PrintStr) refers to lcd_text.o(i.LCD_Text_PrintChar) for LCD_Text_PrintChar
    lcd_text.o(i.LCD_Text_PrintStr) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    lcd_text.o(i.LCD_Text_PrintStr) refers to threads.o(.data) for LCD_mutex
    lcd_text.o(i.LCD_Text_PrintStr) refers to lcd_text.o(.data) for .data
    lcd_text.o(i.LCD_Text_PrintStr_RC) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    lcd_text.o(i.LCD_Text_PrintStr_RC) refers to lcd_text.o(i.LCD_Text_PrintChar) for LCD_Text_PrintChar
    lcd_text.o(i.LCD_Text_PrintStr_RC) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    lcd_text.o(i.LCD_Text_PrintStr_RC) refers to lcd_text.o(.data) for .data
    lcd_text.o(i.LCD_Text_PrintStr_RC) refers to threads.o(.data) for LCD_mutex
    lcd_text.o(i.LCD_Text_Set_Colors) refers to lcd_text.o(.data) for .data
    lcd_text.o(i.LCD_Text_Test) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    lcd_text.o(i.LCD_Text_Test) refers to lcd_text.o(i.LCD_Text_PrintChar) for LCD_Text_PrintChar
    lcd_text.o(i.LCD_Text_Test) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    lcd_text.o(i.LCD_Text_Test) refers to st7789.o(i.LCD_Refresh) for LCD_Refresh
    lcd_text.o(i.LCD_Text_Test) refers to delay.o(i.Delay) for Delay
    lcd_text.o(i.LCD_Text_Test) refers to st7789.o(i.LCD_Fill_Buffer) for LCD_Fill_Buffer
    lcd_text.o(i.LCD_Text_Test) refers to threads.o(.data) for LCD_mutex
    lcd_text.o(i.LCD_Text_Test) refers to lcd_text.o(.data) for .data
    st7789.o(i.LCD_Controller_Init) refers to delay.o(i.Delay) for Delay
    st7789.o(i.LCD_Controller_Init) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Fill_Buffer) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Fill_Rectangle) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    st7789.o(i.LCD_Fill_Rectangle) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Fill_Rectangle) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    st7789.o(i.LCD_Fill_Rectangle) refers to threads.o(.data) for LCD_mutex
    st7789.o(i.LCD_Init) refers to st7789.o(i.LCD_GPIO_Init) for LCD_GPIO_Init
    st7789.o(i.LCD_Init) refers to touchscreen.o(i.LCD_TS_Init) for LCD_TS_Init
    st7789.o(i.LCD_Init) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    st7789.o(i.LCD_Init) refers to timers.o(i.PWM_Init) for PWM_Init
    st7789.o(i.LCD_Init) refers to delay.o(i.Delay) for Delay
    st7789.o(i.LCD_Init) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Init) refers to system_mkl25z4.o(.data) for SystemCoreClock
    st7789.o(i.LCD_Init) refers to st7789.o(.constdata) for .constdata
    st7789.o(i.LCD_Plot_Pixel) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Set_BL) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Set_Backlight_Brightness) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    st7789.o(i.LCD_Set_Backlight_Brightness) refers to timers.o(i.PWM_Set_Value) for PWM_Set_Value
    st7789.o(i.LCD_Set_Backlight_Brightness) refers to system_mkl25z4.o(.data) for SystemCoreClock
    st7789.o(i.LCD_Set_Controller_Brightness) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Start_Rectangle) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    touchscreen.o(i.LCD_TS_Blocking_Read) refers to touchscreen.o(i.LCD_TS_Read) for LCD_TS_Read
    touchscreen.o(i.LCD_TS_Calibrate) refers to lcd_text.o(i.LCD_Text_PrintStr) for LCD_Text_PrintStr
    touchscreen.o(i.LCD_TS_Calibrate) refers to touchscreen.o(i.LCD_TS_Read) for LCD_TS_Read
    touchscreen.o(i.LCD_TS_Calibrate) refers to lcd_text.o(i.LCD_Erase) for LCD_Erase
    touchscreen.o(i.LCD_TS_Calibrate) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    touchscreen.o(i.LCD_TS_Calibrate) refers to lcd_text.o(.data) for G_LCD_char_height
    touchscreen.o(i.LCD_TS_Calibrate) refers to touchscreen.o(.data) for .data
    touchscreen.o(i.LCD_TS_Init) refers to adc.o(i.Init_ADC) for Init_ADC
    touchscreen.o(i.LCD_TS_Read) refers to rtx_delay.o(.text.osDelay) for osDelay
    touchscreen.o(i.LCD_TS_Read) refers to adc.o(i.request_conversion) for request_conversion
    touchscreen.o(i.LCD_TS_Read) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    touchscreen.o(i.LCD_TS_Read) refers to touchscreen.o(.data) for .data
    profile.o(i.Disable_Profiling) refers to profile.o(.data) for .data
    profile.o(i.Enable_Profiling) refers to profile.o(.data) for .data
    profile.o(i.Init_Profiling) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    profile.o(i.Init_Profiling) refers to timers.o(i.PIT_Init) for PIT_Init
    profile.o(i.Init_Profiling) refers to timers.o(i.PIT_Start) for PIT_Start
    profile.o(i.Init_Profiling) refers to region.o(.constdata) for NumProfileRegions
    profile.o(i.Init_Profiling) refers to region.o(.data) for RegionCount
    profile.o(i.Init_Profiling) refers to system_mkl25z4.o(.data) for SystemCoreClock
    profile.o(i.Sort_Profile_Regions) refers to region.o(.constdata) for NumProfileRegions
    profile.o(i.Sort_Profile_Regions) refers to region.o(.data) for SortedRegions
    profile.o(i.Sort_Profile_Regions) refers to region.o(.data) for RegionCount
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.data) for .data
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for .bss.os.libspace
    rtx_lib.o(i._mutex_acquire) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(.data) for .data
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(.data) for .data
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_timer_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_timer_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm0.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_mem
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_timer_thread_attr
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_timer_mq_attr
    startup_mkl25z4.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(RESET) refers to startup_mkl25z4.o(STACK) for __initial_sp
    startup_mkl25z4.o(RESET) refers to startup_mkl25z4.o(.text) for Reset_Handler
    startup_mkl25z4.o(RESET) refers to irq_cm0.o(.text) for SVC_Handler
    startup_mkl25z4.o(RESET) refers to dma.o(i.DMA0_IRQHandler) for DMA0_IRQHandler
    startup_mkl25z4.o(RESET) refers to adc.o(i.ADC0_IRQHandler) for ADC0_IRQHandler
    startup_mkl25z4.o(RESET) refers to timers.o(i.TPM0_IRQHandler) for TPM0_IRQHandler
    startup_mkl25z4.o(RESET) refers to timers.o(i.PIT_IRQHandler) for PIT_IRQHandler
    startup_mkl25z4.o(.ARM.__at_0x400) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(.text) refers to system_mkl25z4.o(i.SystemInit) for SystemInit
    startup_mkl25z4.o(.text) refers to __main.o(!!!main) for __main
    startup_mkl25z4.o(.text) refers to startup_mkl25z4.o(HEAP) for Heap_Mem
    startup_mkl25z4.o(.text) refers to startup_mkl25z4.o(STACK) for Stack_Mem
    system_mkl25z4.o(i.SystemCoreClockUpdate) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    system_mkl25z4.o(i.SystemCoreClockUpdate) refers to system_mkl25z4.o(.data) for .data
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm0.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRoot) for osRtxThreadListRoot
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm0.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm0.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to aeabi_sdivfast.o(.text) for __aeabi_uidiv
    os_systick.o(.text.OS_Tick_Setup) refers to system_mkl25z4.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_mkl25z4.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    __2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    __2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    __2snprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    __2snprintf.o(.text) refers to _sputc.o(.text) for _sputc
    __2snprintf.o(.text) refers to _snputc.o(.text) for _snputc
    noretval__2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    noretval__2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    noretval__2snprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    noretval__2snprintf.o(.text) refers to _sputc.o(.text) for _sputc
    noretval__2snprintf.o(.text) refers to _snputc.o(.text) for _snputc
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_str.o(.text) refers (Special) to _printf_char.o(.text) for _printf_cs_common
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_dec.o(.text) refers to rtudiv10.o(.text) for __rt_udiv10
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) refers (Weak) to _printf_char.o(.text) for _printf_string
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    d2f.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfixi.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fadd) for _fadd1
    faddsub.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fsub) refers to faddsub.o(x$fpl$fadd) for _fadd1
    fdiv.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(.text) refers to fdiv.o(.constdata) for .constdata
    fdiv.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixi.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixui.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    frlef.o(x$fpl$frleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    frlef.o(x$fpl$frleqf) refers to fcmpin.o(.text) for __fpl_fcmp_InfNaN
    sinf.o(i.__softfp_sinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sinf.o(i.__softfp_sinf) refers to sinf.o(i.sinf) for sinf
    sinf.o(i.sinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sinf.o(i.sinf) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    sinf.o(i.sinf) refers to frnd.o(.text) for _frnd
    sinf.o(i.sinf) refers to ffixi.o(.text) for __aeabi_f2iz
    sinf.o(i.sinf) refers to faddsub.o(x$fpl$frsb) for __aeabi_frsub
    sinf.o(i.sinf) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    sinf.o(i.sinf) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    sinf.o(i.sinf) refers to rredf.o(i.__mathlib_rredf2) for __mathlib_rredf2
    sinf.o(i.sinf) refers to fpclassifyf.o(i.__ARM_fpclassifyf) for __ARM_fpclassifyf
    sinf.o(i.sinf) refers to funder.o(i.__mathlib_flt_underflow) for __mathlib_flt_underflow
    sinf.o(i.sinf) refers to _rserrno.o(.text) for __set_errno
    sinf.o(i.sinf) refers to funder.o(i.__mathlib_flt_invalid) for __mathlib_flt_invalid
    sinf.o(i.sinf) refers to funder.o(i.__mathlib_flt_infnan) for __mathlib_flt_infnan
    sinf_x.o(i.____softfp_sinf$lsc) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sinf_x.o(i.____softfp_sinf$lsc) refers to sinf_x.o(i.__sinf$lsc) for __sinf$lsc
    sinf_x.o(i.__sinf$lsc) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sinf_x.o(i.__sinf$lsc) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    sinf_x.o(i.__sinf$lsc) refers to frnd.o(.text) for _frnd
    sinf_x.o(i.__sinf$lsc) refers to ffixi.o(.text) for __aeabi_f2iz
    sinf_x.o(i.__sinf$lsc) refers to faddsub.o(x$fpl$frsb) for __aeabi_frsub
    sinf_x.o(i.__sinf$lsc) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    sinf_x.o(i.__sinf$lsc) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    sinf_x.o(i.__sinf$lsc) refers to rredf.o(i.__mathlib_rredf2) for __mathlib_rredf2
    sinf_x.o(i.__sinf$lsc) refers to _rserrno.o(.text) for __set_errno
    sinf_x.o(i.__sinf$lsc) refers to funder.o(i.__mathlib_flt_infnan) for __mathlib_flt_infnan
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    _rserrno.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_char_common.o(.text) refers to __printf_flags_wp.o(.text) for __printf
    _printf_char.o(.text) refers (Weak) to _printf_str.o(.text) for _printf_str
    fcmpin.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmpin.o(.text) refers to cmpret.o(.text) for __fpl_cmpreturn
    fcmpin.o(.text) refers to fnan2.o(.text) for __fpl_fcheck_NaN2
    frnd.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fpclassifyf.o(i.__ARM_fpclassifyf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    funder.o(i.__mathlib_flt_divzero) refers to fdiv.o(.text) for __aeabi_fdiv
    funder.o(i.__mathlib_flt_infnan) refers to fscalbn.o(.text) for __ARM_scalbnf
    funder.o(i.__mathlib_flt_infnan2) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    funder.o(i.__mathlib_flt_invalid) refers to fdiv.o(.text) for __aeabi_fdiv
    funder.o(i.__mathlib_flt_overflow) refers to fscalbn.o(.text) for __ARM_scalbnf
    funder.o(i.__mathlib_flt_posinfnan) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    funder.o(i.__mathlib_flt_underflow) refers to fscalbn.o(.text) for __ARM_scalbnf
    rredf.o(i.__mathlib_rredf2) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    rredf.o(i.__mathlib_rredf2) refers to rredf.o(i.__ARM_common_ll_muluu) for __ARM_common_ll_muluu
    rredf.o(i.__mathlib_rredf2) refers to fflti.o(.text) for __aeabi_i2f
    rredf.o(i.__mathlib_rredf2) refers to fscalbn.o(.text) for __ARM_scalbnf
    rredf.o(i.__mathlib_rredf2) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    rredf.o(i.__mathlib_rredf2) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    rredf.o(i.__mathlib_rredf2) refers to faddsub.o(x$fpl$frsb) for __aeabi_frsub
    rredf.o(i.__mathlib_rredf2) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    rredf.o(i.__mathlib_rredf2) refers to rredf.o(.constdata) for .constdata
    rredf.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_errno_addr_twolibspace.o(.text) refers to rtx_lib.o(i.__user_perthread_libspace) for __user_perthread_libspace
    cmpret.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnan2.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnan2.o(.text) refers to retnan.o(.text) for __fpl_return_NaN
    fscalbn.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_mkl25z4.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    retnan.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    retnan.o(.text) refers to cmpret.o(.text) for __fpl_cmpreturn
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    rredf.o(i.__ARM_common_ll_muluu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing control.o(.rev16_text), (4 bytes).
    Removing control.o(.revsh_text), (4 bytes).
    Removing control.o(i.Init_ADC_HBLED), (64 bytes).
    Removing control.o(i.Init_DAC_HBLED), (68 bytes).
    Removing control.o(i.Old_Update_Set_Current), (116 bytes).
    Removing control.o(i.Set_DAC), (12 bytes).
    Removing control.o(i.Set_DAC_mA), (40 bytes).
    Removing control.o(i.UpdatePID), (102 bytes).
    Removing control.o(i.UpdatePID_FX), (94 bytes).
    Removing control.o(.data), (4 bytes).
    Removing debug.o(.rev16_text), (4 bytes).
    Removing debug.o(.revsh_text), (4 bytes).
    Removing delay.o(.rev16_text), (4 bytes).
    Removing delay.o(.revsh_text), (4 bytes).
    Removing delay.o(i.ShortDelay), (16 bytes).
    Removing dma.o(.rev16_text), (4 bytes).
    Removing dma.o(.revsh_text), (4 bytes).
    Removing dma.o(i.Configure_DMA_For_Playback), (92 bytes).
    Removing dma.o(i.DMA_Init), (32 bytes).
    Removing dma.o(i.Start_DMA_Playback), (80 bytes).
    Removing fx.o(i.Test_FX), (2 bytes).
    Removing leds.o(.rev16_text), (4 bytes).
    Removing leds.o(.revsh_text), (4 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing sound.o(.rev16_text), (4 bytes).
    Removing sound.o(.revsh_text), (4 bytes).
    Removing sound.o(i.DAC_Init), (60 bytes).
    Removing sound.o(i.Init_Voices), (88 bytes).
    Removing sound.o(i.Init_Waveform), (40 bytes).
    Removing sound.o(i.Play_Sound_Sample), (16 bytes).
    Removing sound.o(i.Play_Tone), (148 bytes).
    Removing sound.o(i.Play_Waveform_with_DMA), (28 bytes).
    Removing sound.o(i.SineTable_Init), (104 bytes).
    Removing sound.o(i.Sound_Enable_Amp), (16 bytes).
    Removing sound.o(i.Sound_Generate_Next_Sample), (124 bytes).
    Removing sound.o(i.Sound_Init), (352 bytes).
    Removing sound.o(i.Thread_Refill_Sound_Buffer), (284 bytes).
    Removing sound.o(i.Thread_Sound_Manager), (176 bytes).
    Removing sound.o(.bss), (2336 bytes).
    Removing sound.o(.constdata), (96 bytes).
    Removing sound.o(.data), (1 bytes).
    Removing threads.o(.rev16_text), (4 bytes).
    Removing threads.o(.revsh_text), (4 bytes).
    Removing threads.o(.data), (4 bytes).
    Removing timers.o(.rev16_text), (4 bytes).
    Removing timers.o(.revsh_text), (4 bytes).
    Removing timers.o(i.Configure_TPM0_for_DMA), (24 bytes).
    Removing timers.o(i.PIT_Init), (104 bytes).
    Removing timers.o(i.PIT_Start), (20 bytes).
    Removing timers.o(i.PIT_Stop), (20 bytes).
    Removing timers.o(i.TPM0_Init), (32 bytes).
    Removing timers.o(.data), (4 bytes).
    Removing timers.o(.data), (4 bytes).
    Removing ui.o(.rev16_text), (4 bytes).
    Removing ui.o(.revsh_text), (4 bytes).
    Removing ui.o(i.UI_Draw_Fields), (104 bytes).
    Removing ui.o(i.UI_Draw_Slider), (92 bytes).
    Removing ui.o(i.UI_Update_Field_Selects), (172 bytes).
    Removing ui.o(i.UI_Update_Volatile_Field_Values), (72 bytes).
    Removing ui.o(i.ave_samples), (18 bytes).
    Removing adc.o(.rev16_text), (4 bytes).
    Removing adc.o(.revsh_text), (4 bytes).
    Removing adc.o(.data), (2 bytes).
    Removing adc.o(.data), (1 bytes).
    Removing fault.o(.rev16_text), (4 bytes).
    Removing fault.o(.revsh_text), (4 bytes).
    Removing fault.o(i.Fault_Fill_Queue), (36 bytes).
    Removing fault.o(i.Test_Fault), (256 bytes).
    Removing lcd_graphics.o(.rev16_text), (4 bytes).
    Removing lcd_graphics.o(.revsh_text), (4 bytes).
    Removing lcd_graphics.o(i.Graphics_Test), (384 bytes).
    Removing lcd_graphics.o(i.LCD_Draw_Circle), (232 bytes).
    Removing lcd_text.o(.rev16_text), (4 bytes).
    Removing lcd_text.o(.revsh_text), (4 bytes).
    Removing lcd_text.o(i.Bit_Reverse_Byte), (26 bytes).
    Removing lcd_text.o(i.LCD_Text_GetGlyphWidth), (24 bytes).
    Removing lcd_text.o(i.LCD_Text_PrintStr), (96 bytes).
    Removing lcd_text.o(i.LCD_Text_Test), (296 bytes).
    Removing lucida_8x13.o(.constdata), (1640 bytes).
    Removing lucida_20x31.o(.constdata), (8762 bytes).
    Removing st7789.o(.rev16_text), (4 bytes).
    Removing st7789.o(.revsh_text), (4 bytes).
    Removing st7789.o(i.LCD_Controller_Init), (116 bytes).
    Removing st7789.o(i.LCD_Refresh), (2 bytes).
    Removing st7789.o(i.LCD_Set_BL), (56 bytes).
    Removing st7789.o(i.LCD_Set_Backlight_Brightness), (56 bytes).
    Removing st7789.o(i.LCD_Set_Controller_Brightness), (44 bytes).
    Removing st7789.o(i.LCD_Write_Rectangle_N_Quad_Pixel_Components), (140 bytes).
    Removing st7789.o(i.LCD_Write_Rectangle_Pixel_Components), (76 bytes).
    Removing st7789.o(i.LCD_Write_Rectangle_Quad_Pixel_Components), (108 bytes).
    Removing st7789.o(.constdata), (126 bytes).
    Removing st7789.o(.data), (4 bytes).
    Removing t6963.o(.rev16_text), (4 bytes).
    Removing t6963.o(.revsh_text), (4 bytes).
    Removing touchscreen.o(.rev16_text), (4 bytes).
    Removing touchscreen.o(.revsh_text), (4 bytes).
    Removing touchscreen.o(i.LCD_TS_Blocking_Read), (52 bytes).
    Removing touchscreen.o(i.LCD_TS_Calibrate), (292 bytes).
    Removing colors.o(.data), (3 bytes).
    Removing colors.o(.data), (3 bytes).
    Removing colors.o(.data), (3 bytes).
    Removing colors.o(.data), (3 bytes).
    Removing colors.o(.data), (3 bytes).
    Removing colors.o(.data), (3 bytes).
    Removing colors.o(.data), (3 bytes).
    Removing colors.o(.data), (3 bytes).
    Removing profile.o(.rev16_text), (4 bytes).
    Removing profile.o(.revsh_text), (4 bytes).
    Removing profile.o(i.Disable_Profiling), (12 bytes).
    Removing profile.o(i.Enable_Profiling), (12 bytes).
    Removing profile.o(i.Init_Profiling), (92 bytes).
    Removing profile.o(i.Print_Sorted_Profile), (2 bytes).
    Removing profile.o(i.Sort_Profile_Regions), (168 bytes).
    Removing region.o(.data), (4 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(i.__user_perthread_libspace), (100 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (496 bytes).
    Removing rtx_lib.o(.data), (4 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing system_mkl25z4.o(.rev16_text), (4 bytes).
    Removing system_mkl25z4.o(.revsh_text), (4 bytes).
    Removing system_mkl25z4.o(i.SystemCoreClockUpdate), (292 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (56 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (136 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (132 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (58 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (188 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (40 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (32 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (18 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (160 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing irq_cm0.o(.constdata), (1 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (132 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (18 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (440 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (112 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (40 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).

429 unused section(s) (total 26217 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_mkl25z4.o(RESET)
    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/division.c                       0x00000000   Number         0  rtudiv10.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/fenv.c                           0x00000000   Number         0  _rserrno.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/longlong.c                       0x00000000   Number         0  llmul.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/misc.s                           0x00000000   Number         0  printf_stubs.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _sputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _snputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2snprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2snprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_pad.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_str.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_s.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/cfplib/cmpret.c                 0x00000000   Number         0  cmpret.o ABSOLUTE
    ../fplib/cfplib/d2f.c                    0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/cfplib/dmul.c                   0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/cfplib/fcmpin.c                 0x00000000   Number         0  fcmpin.o ABSOLUTE
    ../fplib/cfplib/fdiv.c                   0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  ffixui.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/cfplib/frnd.c                   0x00000000   Number         0  frnd.o ABSOLUTE
    ../fplib/cfplib/nan2.c                   0x00000000   Number         0  fnan2.o ABSOLUTE
    ../fplib/cfplib/retnan.c                 0x00000000   Number         0  retnan.o ABSOLUTE
    ../fplib/cfplib/scalbn.c                 0x00000000   Number         0  fscalbn.o ABSOLUTE
    ../fplib/faddsub6m.s                     0x00000000   Number         0  faddsub.o ABSOLUTE
    ../fplib/fmul6m.s                        0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/frleqf6m.s                      0x00000000   Number         0  frlef.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ../mathlib/fpclassifyf.c                 0x00000000   Number         0  fpclassifyf.o ABSOLUTE
    ../mathlib/funder.c                      0x00000000   Number         0  funder.o ABSOLUTE
    ../mathlib/rredf.c                       0x00000000   Number         0  rredf.o ABSOLUTE
    ../mathlib/sinf.c                        0x00000000   Number         0  sinf.o ABSOLUTE
    ../mathlib/sinf.c                        0x00000000   Number         0  sinf_x.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm0.s            0x00000000   Number         0  irq_cm0.o ABSOLUTE
    C:\Users\velas\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Users\\velas\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.7.0\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\MKL25Z128xxx4\startup_MKL25Z4.s 0x00000000   Number         0  startup_mkl25z4.o ABSOLUTE
    RTE\Device\MKL25Z128xxx4\system_MKL25Z4.c 0x00000000   Number         0  system_mkl25z4.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\MKL25Z128xxx4\\system_MKL25Z4.c 0x00000000   Number         0  system_mkl25z4.o ABSOLUTE
    Source\ADC.c                             0x00000000   Number         0  adc.o ABSOLUTE
    Source\DMA.c                             0x00000000   Number         0  dma.o ABSOLUTE
    Source\FX.c                              0x00000000   Number         0  fx.o ABSOLUTE
    Source\LCD\LCD_graphics.c                0x00000000   Number         0  lcd_graphics.o ABSOLUTE
    Source\LCD\LCD_text.c                    0x00000000   Number         0  lcd_text.o ABSOLUTE
    Source\LCD\ST7789.c                      0x00000000   Number         0  st7789.o ABSOLUTE
    Source\LCD\T6963.c                       0x00000000   Number         0  t6963.o ABSOLUTE
    Source\LCD\colors.c                      0x00000000   Number         0  colors.o ABSOLUTE
    Source\LCD\lucida_12x19.c                0x00000000   Number         0  lucida_12x19.o ABSOLUTE
    Source\LCD\lucida_20x31.c                0x00000000   Number         0  lucida_20x31.o ABSOLUTE
    Source\LCD\lucida_8x13.c                 0x00000000   Number         0  lucida_8x13.o ABSOLUTE
    Source\LCD\touchscreen.c                 0x00000000   Number         0  touchscreen.o ABSOLUTE
    Source\LEDs.c                            0x00000000   Number         0  leds.o ABSOLUTE
    Source\Profiler\profile.c                0x00000000   Number         0  profile.o ABSOLUTE
    Source\Profiler\region.c                 0x00000000   Number         0  region.o ABSOLUTE
    Source\UI.c                              0x00000000   Number         0  ui.o ABSOLUTE
    Source\\ADC.c                            0x00000000   Number         0  adc.o ABSOLUTE
    Source\\DMA.c                            0x00000000   Number         0  dma.o ABSOLUTE
    Source\\LCD\\LCD_graphics.c              0x00000000   Number         0  lcd_graphics.o ABSOLUTE
    Source\\LCD\\LCD_text.c                  0x00000000   Number         0  lcd_text.o ABSOLUTE
    Source\\LCD\\ST7789.c                    0x00000000   Number         0  st7789.o ABSOLUTE
    Source\\LCD\\T6963.c                     0x00000000   Number         0  t6963.o ABSOLUTE
    Source\\LCD\\touchscreen.c               0x00000000   Number         0  touchscreen.o ABSOLUTE
    Source\\LEDs.c                           0x00000000   Number         0  leds.o ABSOLUTE
    Source\\Profiler\\profile.c              0x00000000   Number         0  profile.o ABSOLUTE
    Source\\UI.c                             0x00000000   Number         0  ui.o ABSOLUTE
    Source\\control.c                        0x00000000   Number         0  control.o ABSOLUTE
    Source\\debug.c                          0x00000000   Number         0  debug.o ABSOLUTE
    Source\\delay.c                          0x00000000   Number         0  delay.o ABSOLUTE
    Source\\fault.c                          0x00000000   Number         0  fault.o ABSOLUTE
    Source\\main.c                           0x00000000   Number         0  main.o ABSOLUTE
    Source\\sound.c                          0x00000000   Number         0  sound.o ABSOLUTE
    Source\\threads.c                        0x00000000   Number         0  threads.o ABSOLUTE
    Source\\timers.c                         0x00000000   Number         0  timers.o ABSOLUTE
    Source\control.c                         0x00000000   Number         0  control.o ABSOLUTE
    Source\debug.c                           0x00000000   Number         0  debug.o ABSOLUTE
    Source\delay.c                           0x00000000   Number         0  delay.o ABSOLUTE
    Source\fault.c                           0x00000000   Number         0  fault.o ABSOLUTE
    Source\main.c                            0x00000000   Number         0  main.o ABSOLUTE
    Source\sound.c                           0x00000000   Number         0  sound.o ABSOLUTE
    Source\threads.c                         0x00000000   Number         0  threads.o ABSOLUTE
    Source\timers.c                          0x00000000   Number         0  timers.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    !!!main                                  0x000000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x000000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_zi                             0x00000104   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x00000120   Section        2  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000009  0x00000122   Section       10  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    .ARM.Collect$$_printf_percent$$00000014  0x0000012c   Section       10  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    .ARM.Collect$$_printf_percent$$00000017  0x00000136   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x0000013a   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x0000013c   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x0000013e   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x00000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x00000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x00000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x00000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x00000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x00000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x00000140   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000142   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000142   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000142   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x00000148   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x00000150   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000154   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000154   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000015c   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0000015e   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0000015e   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000162   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x00000168   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x000001a0   Section       64  startup_mkl25z4.o(.text)
    .text                                    0x000001e0   Section      164  irq_cm0.o(.text)
    .text                                    0x00000284   Section        0  llmul.o(.text)
    .text                                    0x000002b4   Section        0  noretval__2sprintf.o(.text)
    .text                                    0x000002dc   Section        0  noretval__2snprintf.o(.text)
    .text                                    0x00000314   Section        0  _printf_pad.o(.text)
    .text                                    0x00000362   Section        0  _printf_str.o(.text)
    .text                                    0x000003b4   Section        0  strlen.o(.text)
    .text                                    0x000003f8   Section        0  heapauxi.o(.text)
    .text                                    0x000003fe   Section        2  use_no_semi.o(.text)
    .ARM.__at_0x400                          0x00000400   Section       16  startup_mkl25z4.o(.ARM.__at_0x400)
    .text                                    0x00000410   Section        0  _printf_dec.o(.text)
    .text                                    0x0000047c   Section        0  __printf_flags_wp.o(.text)
    .text                                    0x000005b4   Section        0  rt_memcpy.o(.text)
    .text                                    0x00000636   Section        0  rt_memclr.o(.text)
    .text                                    0x00000676   Section      488  aeabi_sdivfast.o(.text)
    .text                                    0x00000860   Section        0  dfixi.o(.text)
    .text                                    0x000008cc   Section        0  dflti.o(.text)
    .text                                    0x00000924   Section        0  dmul.o(.text)
    .text                                    0x00000b6c   Section        0  ffixi.o(.text)
    .text                                    0x00000bb8   Section        0  ffixui.o(.text)
    .text                                    0x00000be8   Section        0  fflti.o(.text)
    .text                                    0x00000c46   Section        0  _printf_intcommon.o(.text)
    .text                                    0x00000cf8   Section        0  _printf_char_common.o(.text)
    _printf_input_char                       0x00000cf9   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x00000d28   Section        0  _sputc.o(.text)
    .text                                    0x00000d32   Section        0  _snputc.o(.text)
    .text                                    0x00000d42   Section        0  _printf_char.o(.text)
    .text                                    0x00000d70   Section        0  rtudiv10.o(.text)
    .text                                    0x00000d98   Section        0  fcmpin.o(.text)
    .text                                    0x00000dfc   Section        0  cmpret.o(.text)
    .text                                    0x00000e2c   Section        0  fnan2.o(.text)
    .text                                    0x00000e3c   Section        8  libspace.o(.text)
    .text                                    0x00000e44   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x00000e82   Section        0  exit.o(.text)
    .text                                    0x00000e92   Section        0  retnan.o(.text)
    .text                                    0x00000ef0   Section        0  sys_exit.o(.text)
    .text                                    0x00000efc   Section        0  indicate_semi.o(.text)
    .text                                    0x00000efc   Section        0  __dczerorl2.o(.text)
    [Anonymous Symbol]                       0x00000f52   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueueGet                          0x00000f53   Thumb Code    74  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x00000f9c   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueuePut                          0x00000f9d   Thumb Code    98  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x00000ffe   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    MessageQueueRemove                       0x00000fff   Thumb Code    30  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x0000101c   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __arm_cp.3_0                             0x00001024   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x00001028   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x00001048   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x0000104c   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x00001050   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x00001054   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x0000105c   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x00001098   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x0000109c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x000010a0   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x000010a4   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x000010a8   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x000010a9   Thumb Code    92  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x00001104   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerInsert                              0x00001105   Thumb Code    76  rtx_timer.o(.text.TimerInsert)
    __arm_cp.8_0                             0x0000114c   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x00001150   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x00001174   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x00001178   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_0                             0x000011a0   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_1                             0x000011a4   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x000011a8   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.1_0                             0x000011cc   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x000011d0   Section        0  rtx_kernel.o(.text.osKernelLock)
    __arm_cp.7_0                             0x000011f0   Number         4  rtx_kernel.o(.text.osKernelLock)
    [Anonymous Symbol]                       0x000011f4   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.6_0                             0x00001214   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x00001218   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.3_0                             0x00001288   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x0000128c   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.0_0                             0x000012ac   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x000012b0   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x00001320   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x00001324   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.4_0                             0x00001348   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x0000134c   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.7_0                             0x00001370   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x00001374   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x00001394   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x00001398   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.5_0                             0x000013bc   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x000013c0   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x000013c2   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x0000143c   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x0000148a   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x000014ba   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x000014e8   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x00001522   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x0000155e   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMessageQueuePostProcess             0x0000155f   Thumb Code   188  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x0000161a   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x0000165e   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x000016a0   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x00001720   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x00001724   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_0                             0x0000178c   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x00001790   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x00001794   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x00001795   Thumb Code    56  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.11_0                            0x000017c8   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x000017cc   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x000017cd   Thumb Code   124  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.15_0                            0x00001844   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x00001848   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x00001849   Thumb Code    68  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.13_0                            0x00001888   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x0000188c   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x000018dc   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x000018e0   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.10_0                            0x0000192c   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x00001930   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadFree                          0x00001931   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.53_0                            0x00001980   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x00001984   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x00001998   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x000019c4   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x000019dc   Section        0  rtx_thread.o(.text.osRtxThreadListRoot)
    osRtxThreadListRoot                      0x000019dd   Thumb Code    12  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x000019e8   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x00001a0c   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadPostProcess                   0x00001a0d   Thumb Code    38  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x00001a34   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x00001a48   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x00001a4c   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x00001a54   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.9_0                             0x00001a78   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.9_1                             0x00001a7c   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x00001a80   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.16_0                            0x00001ab0   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.16_1                            0x00001ab4   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.16_2                            0x00001ab8   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.16_3                            0x00001abc   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x00001ac0   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.8_0                             0x00001ad0   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x00001ad4   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.14_0                            0x00001b0c   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x00001b10   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x00001b34   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x00001ba4   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x00001ba8   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_0                             0x00001bd8   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_1                             0x00001bdc   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_2                             0x00001be0   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    [Anonymous Symbol]                       0x00001be4   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    osRtxTimerTick                           0x00001be5   Thumb Code    96  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x00001c40   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x00001c44   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.32_0                            0x00001c4c   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x00001c50   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    __arm_cp.36_0                            0x00001ca4   Number         4  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x00001ca8   Section        0  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.20_0                            0x00001cc8   Number         4  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.20_1                            0x00001ccc   Number         4  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x00001cd0   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.18_0                            0x00001cf0   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x00001cf4   Section        0  rtx_thread.o(.text.osThreadSetPriority)
    __arm_cp.25_0                            0x00001d18   Number         4  rtx_thread.o(.text.osThreadSetPriority)
    [Anonymous Symbol]                       0x00001d1c   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxDelay                              0x00001d1d   Thumb Code    18  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x00001d30   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetState                     0x00001d31   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.5_0                             0x00001d38   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x00001d3c   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x00001d3d   Thumb Code   332  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_0                            0x00001e7c   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_1                            0x00001e80   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_2                            0x00001e84   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x00001e88   Section        0  rtx_kernel.o(.text.svcRtxKernelLock)
    svcRtxKernelLock                         0x00001e89   Thumb Code    36  rtx_kernel.o(.text.svcRtxKernelLock)
    __arm_cp.22_0                            0x00001ea8   Number         4  rtx_kernel.o(.text.svcRtxKernelLock)
    [Anonymous Symbol]                       0x00001eac   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelStart                        0x00001ead   Thumb Code   128  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_0                            0x00001f1c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_1                            0x00001f20   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_2                            0x00001f24   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_3                            0x00001f28   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x00001f2c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGet                    0x00001f2d   Thumb Code   228  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.21_0                            0x0000200c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x00002010   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueueNew                    0x00002011   Thumb Code   484  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_0                            0x000021dc   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_1                            0x000021e0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_2                            0x000021e4   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_3                            0x000021e8   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_4                            0x000021ec   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_5                            0x000021f0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x000021f4   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueuePut                    0x000021f5   Thumb Code   184  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.19_0                            0x000022a8   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x000022ac   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexAcquire                       0x000022ad   Thumb Code   152  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.10_0                            0x00002340   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x00002344   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexDelete                        0x00002345   Thumb Code   184  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.13_0                            0x000023f8   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x000023fc   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexNew                           0x000023fd   Thumb Code   112  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.8_0                             0x00002468   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x0000246c   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxMutexRelease                       0x0000246d   Thumb Code   188  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.11_0                            0x00002524   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x00002528   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadExit                         0x00002529   Thumb Code   108  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.55_0                            0x00002590   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x00002594   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    svcRtxThreadFlagsSet                     0x00002595   Thumb Code   108  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x00002600   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadGetId                        0x00002601   Thumb Code    12  rtx_thread.o(.text.svcRtxThreadGetId)
    __arm_cp.21_0                            0x00002608   Number         4  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x0000260c   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadNew                          0x0000260d   Thumb Code   516  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_0                            0x000027f8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_1                            0x000027fc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_2                            0x00002800   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_3                            0x00002804   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_4                            0x00002808   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_5                            0x0000280c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x00002810   Section        0  rtx_thread.o(.text.svcRtxThreadSetPriority)
    svcRtxThreadSetPriority                  0x00002811   Thumb Code    70  rtx_thread.o(.text.svcRtxThreadSetPriority)
    i.ADC0_IRQHandler                        0x00002858   Section        0  adc.o(i.ADC0_IRQHandler)
    i.Add_FX                                 0x00002900   Section        0  fx.o(i.Add_FX)
    i.Control_DutyCycle_Handler              0x00002904   Section        0  control.o(i.Control_DutyCycle_Handler)
    i.Control_HBLED                          0x00002940   Section        0  control.o(i.Control_HBLED)
    i.Control_IntNonNegative_Handler         0x00002b8c   Section        0  control.o(i.Control_IntNonNegative_Handler)
    i.Control_OnOff_Handler                  0x00002ba8   Section        0  control.o(i.Control_OnOff_Handler)
    i.Control_RGB_LEDs                       0x00002bbc   Section        0  leds.o(i.Control_RGB_LEDs)
    i.Create_OS_Objects                      0x00002bf8   Section        0  threads.o(i.Create_OS_Objects)
    i.DMA0_IRQHandler                        0x00002c4c   Section        0  dma.o(i.DMA0_IRQHandler)
    i.Delay                                  0x00002cd0   Section        0  delay.o(i.Delay)
    i.Fault_Init                             0x00002ce8   Section        0  fault.o(i.Fault_Init)
    i.Fault_Recursion_Test                   0x00002d08   Section        0  fault.o(i.Fault_Recursion_Test)
    i.Init_ADC                               0x00002d0c   Section        0  adc.o(i.Init_ADC)
    i.Init_Buck_HBLED                        0x00002d80   Section        0  control.o(i.Init_Buck_HBLED)
    i.Init_Debug_Signals                     0x00002e30   Section        0  debug.o(i.Init_Debug_Signals)
    i.Init_RGB_LEDs                          0x00002ee8   Section        0  leds.o(i.Init_RGB_LEDs)
    i.LCD_24S_Write_Command                  0x00002f50   Section        0  st7789.o(i.LCD_24S_Write_Command)
    LCD_24S_Write_Command                    0x00002f51   Thumb Code    40  st7789.o(i.LCD_24S_Write_Command)
    i.LCD_Draw_Line                          0x00002f7c   Section        0  lcd_graphics.o(i.LCD_Draw_Line)
    i.LCD_Erase                              0x000031b0   Section        0  lcd_text.o(i.LCD_Erase)
    i.LCD_Fill_Buffer                        0x000031c0   Section        0  st7789.o(i.LCD_Fill_Buffer)
    i.LCD_Fill_Rectangle                     0x000032c4   Section        0  st7789.o(i.LCD_Fill_Rectangle)
    i.LCD_GPIO_Init                          0x0000345c   Section        0  st7789.o(i.LCD_GPIO_Init)
    i.LCD_Init                               0x00003598   Section        0  st7789.o(i.LCD_Init)
    i.LCD_Plot_Pixel                         0x00003670   Section        0  st7789.o(i.LCD_Plot_Pixel)
    i.LCD_Start_Rectangle                    0x00003778   Section        0  st7789.o(i.LCD_Start_Rectangle)
    i.LCD_TS_Init                            0x000038b8   Section        0  touchscreen.o(i.LCD_TS_Init)
    i.LCD_TS_Read                            0x000038c0   Section        0  touchscreen.o(i.LCD_TS_Read)
    i.LCD_Text_Init                          0x00003a7c   Section        0  lcd_text.o(i.LCD_Text_Init)
    i.LCD_Text_PrintChar                     0x00003ab8   Section        0  lcd_text.o(i.LCD_Text_PrintChar)
    i.LCD_Text_PrintStr_RC                   0x00003c60   Section        0  lcd_text.o(i.LCD_Text_PrintStr_RC)
    i.LCD_Text_Set_Colors                    0x00003cd0   Section        0  lcd_text.o(i.LCD_Text_Set_Colors)
    i.LCD_Write_Rectangle_Pixel              0x00003cf8   Section        0  st7789.o(i.LCD_Write_Rectangle_Pixel)
    i.Multiply_FX                            0x00003d50   Section        0  fx.o(i.Multiply_FX)
    i.PIT_IRQHandler                         0x00003d68   Section        0  timers.o(i.PIT_IRQHandler)
    i.PWM_Init                               0x00003e10   Section        0  timers.o(i.PWM_Init)
    i.PWM_Set_Value                          0x00003ec8   Section        0  timers.o(i.PWM_Set_Value)
    i.Sound_Disable_Amp                      0x00003ed0   Section        0  sound.o(i.Sound_Disable_Amp)
    i.Subtract_FX                            0x00003ee0   Section        0  fx.o(i.Subtract_FX)
    i.SystemInit                             0x00003ee4   Section        0  system_mkl25z4.o(i.SystemInit)
    i.TPM0_IRQHandler                        0x00003fcc   Section        0  timers.o(i.TPM0_IRQHandler)
    i.TPM0_Start                             0x00004008   Section        0  timers.o(i.TPM0_Start)
    i.Thread_Buck_Update_Setpoint            0x00004018   Section        0  threads.o(i.Thread_Buck_Update_Setpoint)
    i.Thread_Fault_Injector                  0x00004024   Section        0  fault.o(i.Thread_Fault_Injector)
    i.Thread_Read_TS                         0x000041ac   Section        0  threads.o(i.Thread_Read_TS)
    i.Thread_Update_Screen                   0x000041c8   Section        0  threads.o(i.Thread_Update_Screen)
    i.UI_Draw_Scope                          0x000041ec   Section        0  ui.o(i.UI_Draw_Scope)
    i.UI_Draw_Screen                         0x00004328   Section        0  ui.o(i.UI_Draw_Screen)
    i.UI_Identify_Field                      0x00004458   Section        0  ui.o(i.UI_Identify_Field)
    i.UI_Process_Touch                       0x000044f4   Section        0  ui.o(i.UI_Process_Touch)
    i.UI_Update_Field_Values                 0x00004608   Section        0  ui.o(i.UI_Update_Field_Values)
    i.Update_Set_Current                     0x00004658   Section        0  control.o(i.Update_Set_Current)
    i._is_digit                              0x000046c8   Section        0  __printf_wp.o(i._is_digit)
    i._mutex_acquire                         0x000046d8   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x000046d9   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x00004708   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x00004709   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x00004712   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x00004713   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x00004734   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x00004735   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x00004760   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i.main                                   0x00004768   Section        0  main.o(i.main)
    i.osRtxErrorNotify                       0x000047cc   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x000047d0   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.request_conversion                     0x000047e0   Section        0  adc.o(i.request_conversion)
    x$fpl$fadd                               0x00004830   Section      140  faddsub.o(x$fpl$fadd)
    _fadd1                                   0x0000483d   Thumb Code     0  faddsub.o(x$fpl$fadd)
    x$fpl$fmul                               0x000048bc   Section      176  fmul.o(x$fpl$fmul)
    x$fpl$frleqf                             0x0000496c   Section       88  frlef.o(x$fpl$frleqf)
    x$fpl$fsub                               0x000049c4   Section      208  faddsub.o(x$fpl$fsub)
    _fsub1                                   0x000049d1   Thumb Code     0  faddsub.o(x$fpl$fsub)
    .constdata                               0x00004a94   Section      124  threads.o(.constdata)
    x$fpl$usenofp                            0x00004a94   Section        0  usenofp.o(x$fpl$usenofp)
    .constdata                               0x00004b10   Section       36  fault.o(.constdata)
    .constdata                               0x00004b34   Section     3831  lucida_12x19.o(.constdata)
    .constdata                               0x00005a2b   Section      142  st7789.o(.constdata)
    .constdata                               0x00005abc   Section       32  region.o(.constdata)
    .constdata                               0x00005adc   Section        4  region.o(.constdata)
    .constdata                               0x00005ae0   Section       36  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x00005ae0   Data          36  rtx_lib.o(.constdata)
    .constdata                               0x00005b04   Section       36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x00005b04   Data          36  rtx_lib.o(.constdata)
    .constdata                               0x00005b28   Section       24  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x00005b28   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x00005b40   Section        4  rtx_lib.o(.constdata)
    .constdata                               0x00005b44   Section       17  __printf_flags_wp.o(.constdata)
    maptable                                 0x00005b44   Data          17  __printf_flags_wp.o(.constdata)
    .conststring                             0x00005b58   Section       10  threads.o(.conststring)
    .rodata                                  0x00005b64   Section      160  rtx_lib.o(.rodata)
    __tagsym$$used                           0x00005b64   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used                           0x00005bcc   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x00005c04   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x00005c04   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x1ffff000   Section     4096  rtx_lib.o(.bss.os)
    os_mem                                   0x1ffff000   Data        4096  rtx_lib.o(.bss.os)
    .bss.os                                  0x20000000   Section       64  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20000000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20000040   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20000040   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20000074   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20000074   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200000c4   Section       68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200000c4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb                        0x20000108   Section       68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20000108   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20000150   Section      256  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20000150   Data         256  rtx_lib.o(.bss.os.thread.stack)
    .bss.os.thread.stack                     0x20000250   Section      256  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20000250   Data         256  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x20000350   Section      116  control.o(.data)
    prev_set_current_sample                  0x20000354   Data           2  control.o(.data)
    curr_sample                              0x2000037c   Data           4  control.o(.data)
    delay                                    0x20000380   Data           4  control.o(.data)
    t                                        0x20000384   Data           4  control.o(.data)
    .data                                    0x200003c4   Section       20  dma.o(.data)
    .data                                    0x200003d8   Section        1  main.o(.data)
    .data                                    0x200003dc   Section       16  threads.o(.data)
    .data                                    0x200003ec   Section        4  threads.o(.data)
    .data                                    0x200003f0   Section        8  timers.o(.data)
    control_divider                          0x200003f4   Data           4  timers.o(.data)
    .data                                    0x200003f8   Section      736  ui.o(.data)
    initialized                              0x20000404   Data           4  ui.o(.data)
    .data                                    0x200006d8   Section       40  adc.o(.data)
    modeHBLED                                0x200006d8   Data           1  adc.o(.data)
    t1                                       0x200006da   Data           2  adc.o(.data)
    t2                                       0x200006dc   Data           2  adc.o(.data)
    res                                      0x200006de   Data           4  adc.o(.data)
    qstat                                    0x200006e4   Data           4  adc.o(.data)
    req                                      0x200006f0   Data           8  adc.o(.data)
    req                                      0x200006f8   Data           8  adc.o(.data)
    .data                                    0x20000700   Section       15  fault.o(.data)
    .data                                    0x20000710   Section       20  lcd_text.o(.data)
    .data                                    0x20000724   Section       40  touchscreen.o(.data)
    xl                                       0x20000726   Data           2  touchscreen.o(.data)
    yu                                       0x20000728   Data           2  touchscreen.o(.data)
    .data                                    0x2000074c   Section        3  colors.o(.data)
    .data                                    0x2000074f   Section        3  colors.o(.data)
    .data                                    0x20000752   Section        3  colors.o(.data)
    .data                                    0x20000755   Section        3  colors.o(.data)
    .data                                    0x20000758   Section        3  colors.o(.data)
    .data                                    0x2000075b   Section        3  colors.o(.data)
    .data                                    0x2000075e   Section        3  colors.o(.data)
    .data                                    0x20000761   Section        3  colors.o(.data)
    .data                                    0x20000764   Section        3  colors.o(.data)
    .data                                    0x20000767   Section        3  colors.o(.data)
    .data                                    0x2000076c   Section        4  profile.o(.data)
    .data                                    0x20000770   Section        4  profile.o(.data)
    .data                                    0x20000774   Section        4  profile.o(.data)
    .data                                    0x20000778   Section        1  profile.o(.data)
    .data                                    0x2000077c   Section        4  region.o(.data)
    .data                                    0x20000780   Section        1  rtx_lib.o(.data)
    os_kernel_active                         0x20000780   Data           1  rtx_lib.o(.data)
    .data                                    0x20000784   Section        4  system_mkl25z4.o(.data)
    .bss                                     0x20000900   Section     3968  control.o(.bss)
    .bss                                     0x20001880   Section       96  libspace.o(.bss)
    [Anonymous Symbol]                       0x200018e0   Section        0  os_systick.o(.bss.PendST)
    PendST                                   0x200018e0   Data           1  os_systick.o(.bss.PendST)
    HEAP                                     0x200018e8   Section        0  startup_mkl25z4.o(HEAP)
    STACK                                    0x200018e8   Section      768  startup_mkl25z4.o(STACK)
    Heap_Mem                                 0x200018e8   Data           0  startup_mkl25z4.o(HEAP)
    Stack_Mem                                0x200018e8   Data         768  startup_mkl25z4.o(STACK)
    __initial_sp                             0x20001be8   Data           0  startup_mkl25z4.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEX$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_mkl25z4.o(RESET)
    _printf_flags                            0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printf_stubs.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _printf_mbtowc                            - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_mkl25z4.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_mkl25z4.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000000c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x000000d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_zeroinit                   0x00000105   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_percent                          0x00000121   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_d                                0x00000123   Thumb Code     0  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    _printf_s                                0x0000012d   Thumb Code     0  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    _printf_percent_end                      0x00000137   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x0000013b   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x0000013f   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x00000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x00000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x00000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x00000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x00000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x00000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x00000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x00000143   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000143   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000143   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x00000149   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x00000151   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x00000155   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000155   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000015d   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0000015f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0000015f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000163   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x00000169   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x00000169   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x000001a1   Thumb Code    12  startup_mkl25z4.o(.text)
    NMI_Handler                              0x000001ad   Thumb Code     2  startup_mkl25z4.o(.text)
    HardFault_Handler                        0x000001af   Thumb Code     2  startup_mkl25z4.o(.text)
    CMP0_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    DAC0_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA1_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA2_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA3_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    DefaultISR                               0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    FTFA_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    I2C0_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    I2C1_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    LLWU_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    LPTMR0_IRQHandler                        0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    LVD_LVW_IRQHandler                       0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    MCG_IRQHandler                           0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    PORTA_IRQHandler                         0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    PORTD_IRQHandler                         0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    RTC_IRQHandler                           0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    RTC_Seconds_IRQHandler                   0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved20_IRQHandler                    0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved39_IRQHandler                    0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved45_IRQHandler                    0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    SPI0_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    SPI1_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM1_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM2_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    TSI0_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    UART0_IRQHandler                         0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    UART1_IRQHandler                         0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    UART2_IRQHandler                         0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    USB0_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    __user_initial_stackheap                 0x000001bd   Thumb Code     0  startup_mkl25z4.o(.text)
    SVC_Handler                              0x000001e1   Thumb Code   132  irq_cm0.o(.text)
    PendSV_Handler                           0x00000265   Thumb Code    12  irq_cm0.o(.text)
    SysTick_Handler                          0x00000271   Thumb Code    12  irq_cm0.o(.text)
    __aeabi_lmul                             0x00000285   Thumb Code    48  llmul.o(.text)
    _ll_mul                                  0x00000285   Thumb Code     0  llmul.o(.text)
    __2sprintf                               0x000002b5   Thumb Code    36  noretval__2sprintf.o(.text)
    __2snprintf                              0x000002dd   Thumb Code    50  noretval__2snprintf.o(.text)
    _printf_pre_padding                      0x00000315   Thumb Code    44  _printf_pad.o(.text)
    _printf_post_padding                     0x00000341   Thumb Code    34  _printf_pad.o(.text)
    _printf_str                              0x00000363   Thumb Code    82  _printf_str.o(.text)
    strlen                                   0x000003b5   Thumb Code    62  strlen.o(.text)
    __use_two_region_memory                  0x000003f9   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x000003fb   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x000003fd   Thumb Code     2  heapauxi.o(.text)
    __I$use$semihosting                      0x000003ff   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x000003ff   Thumb Code     2  use_no_semi.o(.text)
    _printf_int_dec                          0x00000411   Thumb Code    90  _printf_dec.o(.text)
    __printf                                 0x0000047d   Thumb Code   306  __printf_flags_wp.o(.text)
    __aeabi_memcpy                           0x000005b5   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x000005b5   Thumb Code     0  rt_memcpy.o(.text)
    _memset_w                                0x00000637   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x00000651   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x0000066f   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x0000066f   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x00000673   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x00000673   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x00000673   Thumb Code     4  rt_memclr.o(.text)
    __aeabi_uidiv                            0x00000677   Thumb Code     0  aeabi_sdivfast.o(.text)
    __aeabi_uidivmod                         0x00000677   Thumb Code    28  aeabi_sdivfast.o(.text)
    __aeabi_idiv                             0x00000693   Thumb Code     0  aeabi_sdivfast.o(.text)
    __aeabi_idivmod                          0x00000693   Thumb Code   460  aeabi_sdivfast.o(.text)
    __aeabi_d2iz                             0x00000861   Thumb Code     0  dfixi.o(.text)
    _dfix                                    0x00000861   Thumb Code    98  dfixi.o(.text)
    __aeabi_i2d_normalise                    0x000008cd   Thumb Code    66  dflti.o(.text)
    __aeabi_i2d                              0x0000090f   Thumb Code    16  dflti.o(.text)
    _dflt                                    0x0000090f   Thumb Code     0  dflti.o(.text)
    __aeabi_ui2d                             0x0000091f   Thumb Code     6  dflti.o(.text)
    _dfltu                                   0x0000091f   Thumb Code     0  dflti.o(.text)
    __aeabi_dmul                             0x00000925   Thumb Code     0  dmul.o(.text)
    _dmul                                    0x00000925   Thumb Code   558  dmul.o(.text)
    __aeabi_f2iz                             0x00000b6d   Thumb Code     0  ffixi.o(.text)
    _ffix                                    0x00000b6d   Thumb Code    76  ffixi.o(.text)
    __aeabi_f2uiz                            0x00000bb9   Thumb Code     0  ffixui.o(.text)
    _ffixu                                   0x00000bb9   Thumb Code    48  ffixui.o(.text)
    __aeabi_i2f_normalise                    0x00000be9   Thumb Code    72  fflti.o(.text)
    __aeabi_i2f                              0x00000c31   Thumb Code    16  fflti.o(.text)
    _fflt                                    0x00000c31   Thumb Code     0  fflti.o(.text)
    __aeabi_ui2f                             0x00000c41   Thumb Code     6  fflti.o(.text)
    _ffltu                                   0x00000c41   Thumb Code     0  fflti.o(.text)
    _printf_int_common                       0x00000c47   Thumb Code   176  _printf_intcommon.o(.text)
    _printf_char_common                      0x00000d03   Thumb Code    32  _printf_char_common.o(.text)
    _sputc                                   0x00000d29   Thumb Code    10  _sputc.o(.text)
    _snputc                                  0x00000d33   Thumb Code    16  _snputc.o(.text)
    _printf_cs_common                        0x00000d43   Thumb Code    22  _printf_char.o(.text)
    _printf_char                             0x00000d59   Thumb Code    16  _printf_char.o(.text)
    _printf_string                           0x00000d69   Thumb Code     8  _printf_char.o(.text)
    __rt_udiv10                              0x00000d71   Thumb Code    40  rtudiv10.o(.text)
    __fpl_fcmp_InfNaN                        0x00000d99   Thumb Code    96  fcmpin.o(.text)
    __fpl_cmpreturn                          0x00000dfd   Thumb Code    46  cmpret.o(.text)
    __fpl_fcheck_NaN2                        0x00000e2d   Thumb Code    10  fnan2.o(.text)
    __user_libspace                          0x00000e3d   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000e3d   Thumb Code     0  libspace.o(.text)
    __user_setup_stackheap                   0x00000e45   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x00000e83   Thumb Code    16  exit.o(.text)
    __fpl_return_NaN                         0x00000e93   Thumb Code    94  retnan.o(.text)
    _sys_exit                                0x00000ef1   Thumb Code     8  sys_exit.o(.text)
    __decompress                             0x00000efd   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x00000efd   Thumb Code    86  __dczerorl2.o(.text)
    __semihosting_library_function           0x00000efd   Thumb Code     0  indicate_semi.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x0000101d   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x00001029   Thumb Code    44  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x00001055   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x0000105d   Thumb Code    76  os_systick.o(.text.OS_Tick_Setup)
    osDelay                                  0x00001151   Thumb Code    40  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x00001179   Thumb Code    48  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x000011a9   Thumb Code    40  rtx_kernel.o(.text.osKernelInitialize)
    osKernelLock                             0x000011d1   Thumb Code    36  rtx_kernel.o(.text.osKernelLock)
    osKernelStart                            0x000011f5   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x00001219   Thumb Code   116  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x0000128d   Thumb Code    36  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x000012b1   Thumb Code   116  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x00001325   Thumb Code    40  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x0000134d   Thumb Code    40  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x00001375   Thumb Code    36  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x00001399   Thumb Code    40  rtx_mutex.o(.text.osMutexRelease)
    osRtxKernelPreInit                       0x000013c1   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x000013c3   Thumb Code   122  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x0000143d   Thumb Code    78  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x0000148b   Thumb Code    48  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x000014bb   Thumb Code    46  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x000014e9   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x00001523   Thumb Code    60  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x0000161b   Thumb Code    68  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x0000165f   Thumb Code    64  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x000016a1   Thumb Code   132  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x00001725   Thumb Code   112  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x0000188d   Thumb Code    84  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x000018e1   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x00001985   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x00001999   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x000019c5   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x000019e9   Thumb Code    36  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x00001a35   Thumb Code    24  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x00001a4d   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x00001a55   Thumb Code    44  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x00001a81   Thumb Code    64  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x00001ac1   Thumb Code    20  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x00001ad5   Thumb Code    60  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x00001b11   Thumb Code    34  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x00001b35   Thumb Code   116  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x00001ba9   Thumb Code    60  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x00001c45   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsSet                         0x00001c51   Thumb Code    88  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadGetId                            0x00001ca9   Thumb Code    40  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x00001cd1   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    osThreadSetPriority                      0x00001cf5   Thumb Code    40  rtx_thread.o(.text.osThreadSetPriority)
    ADC0_IRQHandler                          0x00002859   Thumb Code   142  adc.o(i.ADC0_IRQHandler)
    Add_FX                                   0x00002901   Thumb Code     4  fx.o(i.Add_FX)
    Control_DutyCycle_Handler                0x00002905   Thumb Code    52  control.o(i.Control_DutyCycle_Handler)
    Control_HBLED                            0x00002941   Thumb Code   542  control.o(i.Control_HBLED)
    Control_IntNonNegative_Handler           0x00002b8d   Thumb Code    28  control.o(i.Control_IntNonNegative_Handler)
    Control_OnOff_Handler                    0x00002ba9   Thumb Code    20  control.o(i.Control_OnOff_Handler)
    Control_RGB_LEDs                         0x00002bbd   Thumb Code    52  leds.o(i.Control_RGB_LEDs)
    Create_OS_Objects                        0x00002bf9   Thumb Code    50  threads.o(i.Create_OS_Objects)
    DMA0_IRQHandler                          0x00002c4d   Thumb Code   102  dma.o(i.DMA0_IRQHandler)
    Delay                                    0x00002cd1   Thumb Code    20  delay.o(i.Delay)
    Fault_Init                               0x00002ce9   Thumb Code    18  fault.o(i.Fault_Init)
    Fault_Recursion_Test                     0x00002d09   Thumb Code     4  fault.o(i.Fault_Recursion_Test)
    Init_ADC                                 0x00002d0d   Thumb Code    90  adc.o(i.Init_ADC)
    Init_Buck_HBLED                          0x00002d81   Thumb Code   136  control.o(i.Init_Buck_HBLED)
    Init_Debug_Signals                       0x00002e31   Thumb Code   158  debug.o(i.Init_Debug_Signals)
    Init_RGB_LEDs                            0x00002ee9   Thumb Code    82  leds.o(i.Init_RGB_LEDs)
    LCD_Draw_Line                            0x00002f7d   Thumb Code   564  lcd_graphics.o(i.LCD_Draw_Line)
    LCD_Erase                                0x000031b1   Thumb Code    10  lcd_text.o(i.LCD_Erase)
    LCD_Fill_Buffer                          0x000031c1   Thumb Code   256  st7789.o(i.LCD_Fill_Buffer)
    LCD_Fill_Rectangle                       0x000032c5   Thumb Code   400  st7789.o(i.LCD_Fill_Rectangle)
    LCD_GPIO_Init                            0x0000345d   Thumb Code   294  st7789.o(i.LCD_GPIO_Init)
    LCD_Init                                 0x00003599   Thumb Code   186  st7789.o(i.LCD_Init)
    LCD_Plot_Pixel                           0x00003671   Thumb Code   258  st7789.o(i.LCD_Plot_Pixel)
    LCD_Start_Rectangle                      0x00003779   Thumb Code   316  st7789.o(i.LCD_Start_Rectangle)
    LCD_TS_Init                              0x000038b9   Thumb Code     8  touchscreen.o(i.LCD_TS_Init)
    LCD_TS_Read                              0x000038c1   Thumb Code   422  touchscreen.o(i.LCD_TS_Read)
    LCD_Text_Init                            0x00003a7d   Thumb Code    42  lcd_text.o(i.LCD_Text_Init)
    LCD_Text_PrintChar                       0x00003ab9   Thumb Code   412  lcd_text.o(i.LCD_Text_PrintChar)
    LCD_Text_PrintStr_RC                     0x00003c61   Thumb Code   102  lcd_text.o(i.LCD_Text_PrintStr_RC)
    LCD_Text_Set_Colors                      0x00003cd1   Thumb Code    30  lcd_text.o(i.LCD_Text_Set_Colors)
    LCD_Write_Rectangle_Pixel                0x00003cf9   Thumb Code    84  st7789.o(i.LCD_Write_Rectangle_Pixel)
    Multiply_FX                              0x00003d51   Thumb Code    22  fx.o(i.Multiply_FX)
    PIT_IRQHandler                           0x00003d69   Thumb Code   130  timers.o(i.PIT_IRQHandler)
    PWM_Init                                 0x00003e11   Thumb Code   156  timers.o(i.PWM_Init)
    PWM_Set_Value                            0x00003ec9   Thumb Code     8  timers.o(i.PWM_Set_Value)
    Sound_Disable_Amp                        0x00003ed1   Thumb Code    10  sound.o(i.Sound_Disable_Amp)
    Subtract_FX                              0x00003ee1   Thumb Code     4  fx.o(i.Subtract_FX)
    SystemInit                               0x00003ee5   Thumb Code   184  system_mkl25z4.o(i.SystemInit)
    TPM0_IRQHandler                          0x00003fcd   Thumb Code    44  timers.o(i.TPM0_IRQHandler)
    TPM0_Start                               0x00004009   Thumb Code    12  timers.o(i.TPM0_Start)
    Thread_Buck_Update_Setpoint              0x00004019   Thumb Code    12  threads.o(i.Thread_Buck_Update_Setpoint)
    Thread_Fault_Injector                    0x00004025   Thumb Code   308  fault.o(i.Thread_Fault_Injector)
    Thread_Read_TS                           0x000041ad   Thumb Code    26  threads.o(i.Thread_Read_TS)
    Thread_Update_Screen                     0x000041c9   Thumb Code    30  threads.o(i.Thread_Update_Screen)
    UI_Draw_Scope                            0x000041ed   Thumb Code   268  ui.o(i.UI_Draw_Scope)
    UI_Draw_Screen                           0x00004329   Thumb Code   272  ui.o(i.UI_Draw_Screen)
    UI_Identify_Field                        0x00004459   Thumb Code   138  ui.o(i.UI_Identify_Field)
    UI_Process_Touch                         0x000044f5   Thumb Code   260  ui.o(i.UI_Process_Touch)
    UI_Update_Field_Values                   0x00004609   Thumb Code    66  ui.o(i.UI_Update_Field_Values)
    Update_Set_Current                       0x00004659   Thumb Code    98  control.o(i.Update_Set_Current)
    _is_digit                                0x000046c9   Thumb Code    14  __printf_wp.o(i._is_digit)
    _mutex_acquire                           0x000046d9   Thumb Code    44  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x00004709   Thumb Code    10  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x00004713   Thumb Code    34  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x00004735   Thumb Code    40  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x00004761   Thumb Code     8  rtx_lib.o(i._platform_post_stackheap_init)
    main                                     0x00004769   Thumb Code    86  main.o(i.main)
    osRtxErrorNotify                         0x000047cd   Thumb Code     2  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x000047d1   Thumb Code    10  rtx_config.o(i.osRtxIdleThread)
    request_conversion                       0x000047e1   Thumb Code    66  adc.o(i.request_conversion)
    __aeabi_fadd                             0x00004831   Thumb Code     0  faddsub.o(x$fpl$fadd)
    _fadd                                    0x00004831   Thumb Code   134  faddsub.o(x$fpl$fadd)
    __aeabi_fmul                             0x000048bd   Thumb Code     0  fmul.o(x$fpl$fmul)
    _fmul                                    0x000048bd   Thumb Code   172  fmul.o(x$fpl$fmul)
    __aeabi_cfrcmple                         0x0000496d   Thumb Code     0  frlef.o(x$fpl$frleqf)
    _frcmple                                 0x0000496d   Thumb Code    84  frlef.o(x$fpl$frleqf)
    __aeabi_fsub                             0x000049c5   Thumb Code     0  faddsub.o(x$fpl$fsub)
    _fsub                                    0x000049c5   Thumb Code   204  faddsub.o(x$fpl$fsub)
    Read_TS_attr                             0x00004a94   Data          36  threads.o(.constdata)
    __I$use$fp                               0x00004a94   Number         0  usenofp.o(x$fpl$usenofp)
    Update_Screen_attr                       0x00004ab8   Data          36  threads.o(.constdata)
    BUS_attr                                 0x00004adc   Data          36  threads.o(.constdata)
    LCD_mutex_attr                           0x00004b00   Data          16  threads.o(.constdata)
    Fault_attr                               0x00004b10   Data          36  fault.o(.constdata)
    Lucida_Console12x19                      0x00004b34   Data        3831  lucida_12x19.o(.constdata)
    Init_Seq_ST7789                          0x00005a2b   Data         142  st7789.o(.constdata)
    RegionTable                              0x00005abc   Data          32  region.o(.constdata)
    NumProfileRegions                        0x00005adc   Data           4  region.o(.constdata)
    osRtxUserSVC                             0x00005b40   Data           4  rtx_lib.o(.constdata)
    osRtxConfig                              0x00005b64   Data         104  rtx_lib.o(.rodata)
    os_cb_sections                           0x00005bcc   Data          56  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x00005c10   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00005c30   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.msgqueue.cb$$Base                0x20000040   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20000074   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200000c4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x2000014c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    g_disp_buffer                            0x20000350   Data           1  control.o(.data)
    g_set_current_sample                     0x20000352   Data           2  control.o(.data)
    g_duty_cycle                             0x20000358   Data           4  control.o(.data)
    g_enable_flash                           0x2000035c   Data           4  control.o(.data)
    g_peak_set_current                       0x20000360   Data           4  control.o(.data)
    g_flash_duration                         0x20000364   Data           4  control.o(.data)
    g_flash_period                           0x20000368   Data           4  control.o(.data)
    g_enable_control                         0x2000036c   Data           4  control.o(.data)
    g_set_current                            0x20000370   Data           4  control.o(.data)
    pGain_8                                  0x20000374   Data           4  control.o(.data)
    g_trigger_pt                             0x20000378   Data           4  control.o(.data)
    g_measured_current                       0x20000388   Data           4  control.o(.data)
    plantPID                                 0x2000038c   Data          28  control.o(.data)
    plantPID_FX                              0x200003a8   Data          28  control.o(.data)
    read_buffer_num                          0x200003c4   Data           1  dma.o(.data)
    Reload_DMA_Byte_Count                    0x200003c8   Data           4  dma.o(.data)
    DMA_Playback_Count                       0x200003cc   Data           4  dma.o(.data)
    Reload_DMA_Source                        0x200003d0   Data           8  dma.o(.data)
    control_mode                             0x200003d8   Data           1  main.o(.data)
    t_Read_TS                                0x200003dc   Data           4  threads.o(.data)
    t_US                                     0x200003e0   Data           4  threads.o(.data)
    t_BUS                                    0x200003e4   Data           4  threads.o(.data)
    LCD_mutex                                0x200003e8   Data           4  threads.o(.data)
    t_Refill_Sound_Buffer                    0x200003ec   Data           4  threads.o(.data)
    PC_val                                   0x200003f0   Data           4  timers.o(.data)
    g_scope_height                           0x200003f8   Data           4  ui.o(.data)
    g_holdoff                                0x200003fc   Data           4  ui.o(.data)
    UI_sel_field                             0x20000400   Data           4  ui.o(.data)
    Fields                                   0x20000408   Data         672  ui.o(.data)
    Slider                                   0x200006a8   Data          48  ui.o(.data)
    ADC_RequestQueue                         0x200006e8   Data           4  adc.o(.data)
    ADC_ResponseQueue                        0x200006ec   Data           4  adc.o(.data)
    t_Fault                                  0x20000700   Data           4  fault.o(.data)
    Fault_Tests                              0x20000704   Data          11  fault.o(.data)
    G_LCD_char_width                         0x20000710   Data           1  lcd_text.o(.data)
    G_LCD_char_height                        0x20000711   Data           1  lcd_text.o(.data)
    fg                                       0x20000712   Data           3  lcd_text.o(.data)
    bg                                       0x20000715   Data           3  lcd_text.o(.data)
    font                                     0x20000718   Data           4  lcd_text.o(.data)
    font_header                              0x2000071c   Data           4  lcd_text.o(.data)
    glyph_index                              0x20000720   Data           4  lcd_text.o(.data)
    LCD_TS_Calibrated                        0x20000724   Data           1  touchscreen.o(.data)
    LCD_TS_X_Scale                           0x2000072c   Data           4  touchscreen.o(.data)
    LCD_TS_X_Offset                          0x20000730   Data           4  touchscreen.o(.data)
    LCD_TS_Y_Scale                           0x20000734   Data           4  touchscreen.o(.data)
    LCD_TS_Y_Offset                          0x20000738   Data           4  touchscreen.o(.data)
    TS_Min                                   0x2000073c   Data           8  touchscreen.o(.data)
    TS_Max                                   0x20000744   Data           8  touchscreen.o(.data)
    black                                    0x2000074c   Data           3  colors.o(.data)
    white                                    0x2000074f   Data           3  colors.o(.data)
    red                                      0x20000752   Data           3  colors.o(.data)
    green                                    0x20000755   Data           3  colors.o(.data)
    yellow                                   0x20000758   Data           3  colors.o(.data)
    dark_red                                 0x2000075b   Data           3  colors.o(.data)
    orange                                   0x2000075e   Data           3  colors.o(.data)
    light_gray                               0x20000761   Data           3  colors.o(.data)
    dark_gray                                0x20000764   Data           3  colors.o(.data)
    light_blue                               0x20000767   Data           3  colors.o(.data)
    adx_lost                                 0x2000076c   Data           4  profile.o(.data)
    num_lost                                 0x20000770   Data           4  profile.o(.data)
    profile_samples                          0x20000774   Data           4  profile.o(.data)
    profiling_enabled                        0x20000778   Data           1  profile.o(.data)
    RegionCount                              0x2000077c   Data           4  region.o(.data)
    SystemCoreClock                          0x20000784   Data           4  system_mkl25z4.o(.data)
    osRtxInfo                                0x20000788   Data         164  rtx_kernel.o(.data.os)
    g_set_sample                             0x20000900   Data        1920  control.o(.bss)
    g_meas_sample                            0x20001100   Data        1920  control.o(.bss)
    __libspace_start                         0x20001880   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200018e0   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000001a1

  Load Region LR_1 (Base: 0x00000000, Size: 0x0000745c, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00005d98])

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00005c30, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO         1350    RESET               startup_mkl25z4.o
    0x000000c0   0x000000c0   0x00000008   Code   RO         1915  * !!!main             c_p.l(__main.o)
    0x000000c8   0x000000c8   0x0000003c   Code   RO         2177    !!!scatter          c_p.l(__scatter.o)
    0x00000104   0x00000104   0x0000001c   Code   RO         2179    !!handler_zi        c_p.l(__scatter_zi.o)
    0x00000120   0x00000120   0x00000002   Code   RO         1900    .ARM.Collect$$_printf_percent$$00000000  c_p.l(_printf_percent.o)
    0x00000122   0x00000122   0x0000000a   Code   RO         1899    .ARM.Collect$$_printf_percent$$00000009  c_p.l(_printf_d.o)
    0x0000012c   0x0000012c   0x0000000a   Code   RO         1898    .ARM.Collect$$_printf_percent$$00000014  c_p.l(_printf_s.o)
    0x00000136   0x00000136   0x00000004   Code   RO         1969    .ARM.Collect$$_printf_percent$$00000017  c_p.l(_printf_percent_end.o)
    0x0000013a   0x0000013a   0x00000002   Code   RO         2045    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2058    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2060    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2063    .ARM.Collect$$libinit$$0000000A  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2065    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2067    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2070    .ARM.Collect$$libinit$$00000011  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2072    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2074    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2076    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2078    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2080    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2082    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2084    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2086    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2088    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2090    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2094    .ARM.Collect$$libinit$$0000002C  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2096    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2098    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         2100    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000002   Code   RO         2101    .ARM.Collect$$libinit$$00000033  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000002   Code   RO         2132    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x00000140   0x00000140   0x00000000   Code   RO         2158    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x00000140   0x00000140   0x00000000   Code   RO         2160    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x00000140   0x00000140   0x00000000   Code   RO         2163    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x00000140   0x00000140   0x00000000   Code   RO         2166    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x00000140   0x00000140   0x00000000   Code   RO         2168    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x00000140   0x00000140   0x00000000   Code   RO         2171    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x00000140   0x00000140   0x00000002   Code   RO         2172    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1952    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1999    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x00000142   0x00000142   0x00000006   Code   RO         2011    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x00000148   0x00000148   0x00000008   Code   RO         2000    .ARM.Collect$$rtentry$$00000008  c_p.l(__rtentry2.o)
    0x00000150   0x00000150   0x00000004   Code   RO         2002    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x00000154   0x00000154   0x00000000   Code   RO         2004    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x00000154   0x00000154   0x00000008   Code   RO         2005    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x0000015c   0x0000015c   0x00000002   Code   RO         2049    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x0000015e   0x0000015e   0x00000000   Code   RO         2105    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x0000015e   0x0000015e   0x00000004   Code   RO         2106    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x00000162   0x00000162   0x00000006   Code   RO         2107    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x00000168   0x00000168   0x00000038   Code   RO         1903    .emb_text           c_p.l(rt_memcpy.o)
    0x000001a0   0x000001a0   0x00000040   Code   RO         1352  * .text               startup_mkl25z4.o
    0x000001e0   0x000001e0   0x000000a4   Code   RO         1702    .text               RTX_CM0.lib(irq_cm0.o)
    0x00000284   0x00000284   0x00000030   Code   RO         1860    .text               c_p.l(llmul.o)
    0x000002b4   0x000002b4   0x00000028   Code   RO         1866    .text               c_p.l(noretval__2sprintf.o)
    0x000002dc   0x000002dc   0x00000038   Code   RO         1868    .text               c_p.l(noretval__2snprintf.o)
    0x00000314   0x00000314   0x0000004e   Code   RO         1872    .text               c_p.l(_printf_pad.o)
    0x00000362   0x00000362   0x00000052   Code   RO         1874    .text               c_p.l(_printf_str.o)
    0x000003b4   0x000003b4   0x00000044   Code   RO         1901    .text               c_p.l(strlen.o)
    0x000003f8   0x000003f8   0x00000006   Code   RO         1913    .text               c_p.l(heapauxi.o)
    0x000003fe   0x000003fe   0x00000002   Code   RO         2121    .text               c_p.l(use_no_semi.o)
    0x00000400   0x00000400   0x00000010   Code   RO         1351    .ARM.__at_0x400     startup_mkl25z4.o
    0x00000410   0x00000410   0x0000006c   Code   RO         1876    .text               c_p.l(_printf_dec.o)
    0x0000047c   0x0000047c   0x00000138   Code   RO         1890    .text               c_p.l(__printf_flags_wp.o)
    0x000005b4   0x000005b4   0x00000082   Code   RO         1904    .text               c_p.l(rt_memcpy.o)
    0x00000636   0x00000636   0x00000040   Code   RO         1907    .text               c_p.l(rt_memclr.o)
    0x00000676   0x00000676   0x000001e8   Code   RO         1909    .text               c_p.l(aeabi_sdivfast.o)
    0x0000085e   0x0000085e   0x00000002   PAD
    0x00000860   0x00000860   0x0000006c   Code   RO         1919    .text               fz_ps.l(dfixi.o)
    0x000008cc   0x000008cc   0x00000058   Code   RO         1921    .text               fz_ps.l(dflti.o)
    0x00000924   0x00000924   0x00000248   Code   RO         1923    .text               fz_ps.l(dmul.o)
    0x00000b6c   0x00000b6c   0x0000004c   Code   RO         1934    .text               fz_ps.l(ffixi.o)
    0x00000bb8   0x00000bb8   0x00000030   Code   RO         1936    .text               fz_ps.l(ffixui.o)
    0x00000be8   0x00000be8   0x0000005e   Code   RO         1938    .text               fz_ps.l(fflti.o)
    0x00000c46   0x00000c46   0x000000b0   Code   RO         1959    .text               c_p.l(_printf_intcommon.o)
    0x00000cf6   0x00000cf6   0x00000002   PAD
    0x00000cf8   0x00000cf8   0x00000030   Code   RO         1961    .text               c_p.l(_printf_char_common.o)
    0x00000d28   0x00000d28   0x0000000a   Code   RO         1963    .text               c_p.l(_sputc.o)
    0x00000d32   0x00000d32   0x00000010   Code   RO         1965    .text               c_p.l(_snputc.o)
    0x00000d42   0x00000d42   0x0000002e   Code   RO         1967    .text               c_p.l(_printf_char.o)
    0x00000d70   0x00000d70   0x00000028   Code   RO         1970    .text               c_p.l(rtudiv10.o)
    0x00000d98   0x00000d98   0x00000064   Code   RO         1972    .text               fz_ps.l(fcmpin.o)
    0x00000dfc   0x00000dfc   0x0000002e   Code   RO         2024    .text               fz_ps.l(cmpret.o)
    0x00000e2a   0x00000e2a   0x00000002   PAD
    0x00000e2c   0x00000e2c   0x00000010   Code   RO         2026    .text               fz_ps.l(fnan2.o)
    0x00000e3c   0x00000e3c   0x00000008   Code   RO         2030    .text               c_p.l(libspace.o)
    0x00000e44   0x00000e44   0x0000003e   Code   RO         2033    .text               c_p.l(sys_stackheap_outer.o)
    0x00000e82   0x00000e82   0x00000010   Code   RO         2036    .text               c_p.l(exit.o)
    0x00000e92   0x00000e92   0x0000005e   Code   RO         2046    .text               fz_ps.l(retnan.o)
    0x00000ef0   0x00000ef0   0x0000000c   Code   RO         2102    .text               c_p.l(sys_exit.o)
    0x00000efc   0x00000efc   0x00000000   Code   RO         2123    .text               c_p.l(indicate_semi.o)
    0x00000efc   0x00000efc   0x00000056   Code   RO         2175    .text               c_p.l(__dczerorl2.o)
    0x00000f52   0x00000f52   0x0000004a   Code   RO         1685    .text.MessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000f9c   0x00000f9c   0x00000062   Code   RO         1679    .text.MessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000ffe   0x00000ffe   0x0000001e   Code   RO         1677    .text.MessageQueueRemove  RTX_CM0.lib(rtx_msgqueue.o)
    0x0000101c   0x0000101c   0x0000000c   Code   RO         1837    .text.OS_Tick_AcknowledgeIRQ  RTX_CM0.lib(os_systick.o)
    0x00001028   0x00001028   0x0000002c   Code   RO         1833    .text.OS_Tick_Enable  RTX_CM0.lib(os_systick.o)
    0x00001054   0x00001054   0x00000006   Code   RO         1839    .text.OS_Tick_GetIRQn  RTX_CM0.lib(os_systick.o)
    0x0000105a   0x0000105a   0x00000002   PAD
    0x0000105c   0x0000105c   0x0000004c   Code   RO         1831    .text.OS_Tick_Setup  RTX_CM0.lib(os_systick.o)
    0x000010a8   0x000010a8   0x0000005c   Code   RO         1538    .text.ThreadFlagsCheck  RTX_CM0.lib(rtx_thread.o)
    0x00001104   0x00001104   0x0000004c   Code   RO         1723    .text.TimerInsert   RTX_CM0.lib(rtx_timer.o)
    0x00001150   0x00001150   0x00000028   Code   RO         1591    .text.osDelay       RTX_CM0.lib(rtx_delay.o)
    0x00001178   0x00001178   0x00000030   Code   RO         1399    .text.osKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x000011a8   0x000011a8   0x00000028   Code   RO         1393    .text.osKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x000011d0   0x000011d0   0x00000024   Code   RO         1405    .text.osKernelLock  RTX_CM0.lib(rtx_kernel.o)
    0x000011f4   0x000011f4   0x00000024   Code   RO         1403    .text.osKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x00001218   0x00001218   0x00000074   Code   RO         1651    .text.osMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x0000128c   0x0000128c   0x00000024   Code   RO         1645    .text.osMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x000012b0   0x000012b0   0x00000074   Code   RO         1649    .text.osMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001324   0x00001324   0x00000028   Code   RO         1616    .text.osMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x0000134c   0x0000134c   0x00000028   Code   RO         1622    .text.osMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x00001374   0x00001374   0x00000024   Code   RO         1612    .text.osMutexNew    RTX_CM0.lib(rtx_mutex.o)
    0x00001398   0x00001398   0x00000028   Code   RO         1618    .text.osMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x000013c0   0x000013c0   0x00000002   Code   RO         1391    .text.osRtxKernelPreInit  RTX_CM0.lib(rtx_kernel.o)
    0x000013c2   0x000013c2   0x0000007a   Code   RO         1750    .text.osRtxMemoryAlloc  RTX_CM0.lib(rtx_memory.o)
    0x0000143c   0x0000143c   0x0000004e   Code   RO         1752    .text.osRtxMemoryFree  RTX_CM0.lib(rtx_memory.o)
    0x0000148a   0x0000148a   0x00000030   Code   RO         1748    .text.osRtxMemoryInit  RTX_CM0.lib(rtx_memory.o)
    0x000014ba   0x000014ba   0x0000002e   Code   RO         1765    .text.osRtxMemoryPoolAlloc  RTX_CM0.lib(rtx_mempool.o)
    0x000014e8   0x000014e8   0x0000003a   Code   RO         1767    .text.osRtxMemoryPoolFree  RTX_CM0.lib(rtx_mempool.o)
    0x00001522   0x00001522   0x0000003c   Code   RO         1763    .text.osRtxMemoryPoolInit  RTX_CM0.lib(rtx_mempool.o)
    0x0000155e   0x0000155e   0x000000bc   Code   RO         1675    .text.osRtxMessageQueuePostProcess  RTX_CM0.lib(rtx_msgqueue.o)
    0x0000161a   0x0000161a   0x00000044   Code   RO         1608    .text.osRtxMutexOwnerRelease  RTX_CM0.lib(rtx_mutex.o)
    0x0000165e   0x0000165e   0x00000040   Code   RO         1610    .text.osRtxMutexOwnerRestore  RTX_CM0.lib(rtx_mutex.o)
    0x0000169e   0x0000169e   0x00000002   PAD
    0x000016a0   0x000016a0   0x00000084   Code   RO         1818    .text.osRtxPendSV_Handler  RTX_CM0.lib(rtx_system.o)
    0x00001724   0x00001724   0x00000070   Code   RO         1820    .text.osRtxPostProcess  RTX_CM0.lib(rtx_system.o)
    0x00001794   0x00001794   0x00000038   Code   RO         1478    .text.osRtxThreadBlock  RTX_CM0.lib(rtx_thread.o)
    0x000017cc   0x000017cc   0x0000007c   Code   RO         1486    .text.osRtxThreadDelayInsert  RTX_CM0.lib(rtx_thread.o)
    0x00001848   0x00001848   0x00000044   Code   RO         1482    .text.osRtxThreadDelayRemove  RTX_CM0.lib(rtx_thread.o)
    0x0000188c   0x0000188c   0x00000054   Code   RO         1466    .text.osRtxThreadDelayTick  RTX_CM0.lib(rtx_thread.o)
    0x000018e0   0x000018e0   0x00000050   Code   RO         1476    .text.osRtxThreadDispatch  RTX_CM0.lib(rtx_thread.o)
    0x00001930   0x00001930   0x00000054   Code   RO         1562    .text.osRtxThreadFree  RTX_CM0.lib(rtx_thread.o)
    0x00001984   0x00001984   0x00000014   Code   RO         1458    .text.osRtxThreadListGet  RTX_CM0.lib(rtx_thread.o)
    0x00001998   0x00001998   0x0000002c   Code   RO         1456    .text.osRtxThreadListPut  RTX_CM0.lib(rtx_thread.o)
    0x000019c4   0x000019c4   0x00000018   Code   RO         1462    .text.osRtxThreadListRemove  RTX_CM0.lib(rtx_thread.o)
    0x000019dc   0x000019dc   0x0000000c   Code   RO         1468    .text.osRtxThreadListRoot  RTX_CM0.lib(rtx_thread.o)
    0x000019e8   0x000019e8   0x00000024   Code   RO         1460    .text.osRtxThreadListSort  RTX_CM0.lib(rtx_thread.o)
    0x00001a0c   0x00001a0c   0x00000026   Code   RO         1536    .text.osRtxThreadPostProcess  RTX_CM0.lib(rtx_thread.o)
    0x00001a32   0x00001a32   0x00000002   PAD
    0x00001a34   0x00001a34   0x00000018   Code   RO         1464    .text.osRtxThreadReadyPut  RTX_CM0.lib(rtx_thread.o)
    0x00001a4c   0x00001a4c   0x00000006   Code   RO         1470    .text.osRtxThreadRegPtr  RTX_CM0.lib(rtx_thread.o)
    0x00001a52   0x00001a52   0x00000002   PAD
    0x00001a54   0x00001a54   0x0000002c   Code   RO         1474    .text.osRtxThreadStackCheck  RTX_CM0.lib(rtx_thread.o)
    0x00001a80   0x00001a80   0x00000040   Code   RO         1488    .text.osRtxThreadStartup  RTX_CM0.lib(rtx_thread.o)
    0x00001ac0   0x00001ac0   0x00000014   Code   RO         1472    .text.osRtxThreadSwitch  RTX_CM0.lib(rtx_thread.o)
    0x00001ad4   0x00001ad4   0x0000003c   Code   RO         1484    .text.osRtxThreadWaitEnter  RTX_CM0.lib(rtx_thread.o)
    0x00001b10   0x00001b10   0x00000022   Code   RO         1480    .text.osRtxThreadWaitExit  RTX_CM0.lib(rtx_thread.o)
    0x00001b32   0x00001b32   0x00000002   PAD
    0x00001b34   0x00001b34   0x00000074   Code   RO         1816    .text.osRtxTick_Handler  RTX_CM0.lib(rtx_system.o)
    0x00001ba8   0x00001ba8   0x0000003c   Code   RO         1707    .text.osRtxTimerThread  RTX_CM0.lib(rtx_timer.o)
    0x00001be4   0x00001be4   0x00000060   Code   RO         1709    .text.osRtxTimerTick  RTX_CM0.lib(rtx_timer.o)
    0x00001c44   0x00001c44   0x0000000c   Code   RO         1520    .text.osThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x00001c50   0x00001c50   0x00000058   Code   RO         1528    .text.osThreadFlagsSet  RTX_CM0.lib(rtx_thread.o)
    0x00001ca8   0x00001ca8   0x00000028   Code   RO         1496    .text.osThreadGetId  RTX_CM0.lib(rtx_thread.o)
    0x00001cd0   0x00001cd0   0x00000024   Code   RO         1492    .text.osThreadNew   RTX_CM0.lib(rtx_thread.o)
    0x00001cf4   0x00001cf4   0x00000028   Code   RO         1506    .text.osThreadSetPriority  RTX_CM0.lib(rtx_thread.o)
    0x00001d1c   0x00001d1c   0x00000012   Code   RO         1595    .text.svcRtxDelay   RTX_CM0.lib(rtx_delay.o)
    0x00001d2e   0x00001d2e   0x00000002   PAD
    0x00001d30   0x00001d30   0x0000000c   Code   RO         1401    .text.svcRtxKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x00001d3c   0x00001d3c   0x0000014c   Code   RO         1431    .text.svcRtxKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x00001e88   0x00001e88   0x00000024   Code   RO         1435    .text.svcRtxKernelLock  RTX_CM0.lib(rtx_kernel.o)
    0x00001eac   0x00001eac   0x00000080   Code   RO         1433    .text.svcRtxKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x00001f2c   0x00001f2c   0x000000e4   Code   RO         1687    .text.svcRtxMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x00002010   0x00002010   0x000001e4   Code   RO         1673    .text.svcRtxMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x000021f4   0x000021f4   0x000000b8   Code   RO         1683    .text.svcRtxMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x000022ac   0x000022ac   0x00000098   Code   RO         1628    .text.svcRtxMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x00002344   0x00002344   0x000000b8   Code   RO         1634    .text.svcRtxMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x000023fc   0x000023fc   0x00000070   Code   RO         1624    .text.svcRtxMutexNew  RTX_CM0.lib(rtx_mutex.o)
    0x0000246c   0x0000246c   0x000000bc   Code   RO         1630    .text.svcRtxMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x00002528   0x00002528   0x0000006c   Code   RO         1566    .text.svcRtxThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x00002594   0x00002594   0x0000006c   Code   RO         1574    .text.svcRtxThreadFlagsSet  RTX_CM0.lib(rtx_thread.o)
    0x00002600   0x00002600   0x0000000c   Code   RO         1498    .text.svcRtxThreadGetId  RTX_CM0.lib(rtx_thread.o)
    0x0000260c   0x0000260c   0x00000204   Code   RO         1490    .text.svcRtxThreadNew  RTX_CM0.lib(rtx_thread.o)
    0x00002810   0x00002810   0x00000046   Code   RO         1548    .text.svcRtxThreadSetPriority  RTX_CM0.lib(rtx_thread.o)
    0x00002856   0x00002856   0x00000002   PAD
    0x00002858   0x00002858   0x000000a8   Code   RO          715    i.ADC0_IRQHandler   adc.o
    0x00002900   0x00002900   0x00000004   Code   RO          271    i.Add_FX            fx.o
    0x00002904   0x00002904   0x0000003c   Code   RO            3    i.Control_DutyCycle_Handler  control.o
    0x00002940   0x00002940   0x0000024c   Code   RO            4    i.Control_HBLED     control.o
    0x00002b8c   0x00002b8c   0x0000001c   Code   RO            5    i.Control_IntNonNegative_Handler  control.o
    0x00002ba8   0x00002ba8   0x00000014   Code   RO            6    i.Control_OnOff_Handler  control.o
    0x00002bbc   0x00002bbc   0x0000003c   Code   RO          303    i.Control_RGB_LEDs  leds.o
    0x00002bf8   0x00002bf8   0x00000054   Code   RO          484    i.Create_OS_Objects  threads.o
    0x00002c4c   0x00002c4c   0x00000084   Code   RO          214    i.DMA0_IRQHandler   dma.o
    0x00002cd0   0x00002cd0   0x00000018   Code   RO          187    i.Delay             delay.o
    0x00002ce8   0x00002ce8   0x00000020   Code   RO          757    i.Fault_Init        fault.o
    0x00002d08   0x00002d08   0x00000004   Code   RO          758    i.Fault_Recursion_Test  fault.o
    0x00002d0c   0x00002d0c   0x00000074   Code   RO          716    i.Init_ADC          adc.o
    0x00002d80   0x00002d80   0x000000b0   Code   RO            8    i.Init_Buck_HBLED   control.o
    0x00002e30   0x00002e30   0x000000b8   Code   RO          164    i.Init_Debug_Signals  debug.o
    0x00002ee8   0x00002ee8   0x00000068   Code   RO          304    i.Init_RGB_LEDs     leds.o
    0x00002f50   0x00002f50   0x0000002c   Code   RO          961    i.LCD_24S_Write_Command  st7789.o
    0x00002f7c   0x00002f7c   0x00000234   Code   RO          807    i.LCD_Draw_Line     lcd_graphics.o
    0x000031b0   0x000031b0   0x00000010   Code   RO          860    i.LCD_Erase         lcd_text.o
    0x000031c0   0x000031c0   0x00000104   Code   RO          963    i.LCD_Fill_Buffer   st7789.o
    0x000032c4   0x000032c4   0x00000198   Code   RO          964    i.LCD_Fill_Rectangle  st7789.o
    0x0000345c   0x0000345c   0x0000013c   Code   RO          965    i.LCD_GPIO_Init     st7789.o
    0x00003598   0x00003598   0x000000d8   Code   RO          966    i.LCD_Init          st7789.o
    0x00003670   0x00003670   0x00000108   Code   RO          967    i.LCD_Plot_Pixel    st7789.o
    0x00003778   0x00003778   0x00000140   Code   RO          972    i.LCD_Start_Rectangle  st7789.o
    0x000038b8   0x000038b8   0x00000008   Code   RO         1094    i.LCD_TS_Init       touchscreen.o
    0x000038c0   0x000038c0   0x000001bc   Code   RO         1095    i.LCD_TS_Read       touchscreen.o
    0x00003a7c   0x00003a7c   0x0000003c   Code   RO          862    i.LCD_Text_Init     lcd_text.o
    0x00003ab8   0x00003ab8   0x000001a8   Code   RO          863    i.LCD_Text_PrintChar  lcd_text.o
    0x00003c60   0x00003c60   0x00000070   Code   RO          865    i.LCD_Text_PrintStr_RC  lcd_text.o
    0x00003cd0   0x00003cd0   0x00000028   Code   RO          866    i.LCD_Text_Set_Colors  lcd_text.o
    0x00003cf8   0x00003cf8   0x00000058   Code   RO          974    i.LCD_Write_Rectangle_Pixel  st7789.o
    0x00003d50   0x00003d50   0x00000016   Code   RO          272    i.Multiply_FX       fx.o
    0x00003d66   0x00003d66   0x00000002   PAD
    0x00003d68   0x00003d68   0x000000a8   Code   RO          551    i.PIT_IRQHandler    timers.o
    0x00003e10   0x00003e10   0x000000b8   Code   RO          555    i.PWM_Init          timers.o
    0x00003ec8   0x00003ec8   0x00000008   Code   RO          556    i.PWM_Set_Value     timers.o
    0x00003ed0   0x00003ed0   0x00000010   Code   RO          397    i.Sound_Disable_Amp  sound.o
    0x00003ee0   0x00003ee0   0x00000004   Code   RO          273    i.Subtract_FX       fx.o
    0x00003ee4   0x00003ee4   0x000000e8   Code   RO         1361    i.SystemInit        system_mkl25z4.o
    0x00003fcc   0x00003fcc   0x0000003c   Code   RO          557    i.TPM0_IRQHandler   timers.o
    0x00004008   0x00004008   0x00000010   Code   RO          559    i.TPM0_Start        timers.o
    0x00004018   0x00004018   0x0000000c   Code   RO          485    i.Thread_Buck_Update_Setpoint  threads.o
    0x00004024   0x00004024   0x00000188   Code   RO          760    i.Thread_Fault_Injector  fault.o
    0x000041ac   0x000041ac   0x0000001a   Code   RO          486    i.Thread_Read_TS    threads.o
    0x000041c6   0x000041c6   0x00000002   PAD
    0x000041c8   0x000041c8   0x00000024   Code   RO          487    i.Thread_Update_Screen  threads.o
    0x000041ec   0x000041ec   0x0000013c   Code   RO          639    i.UI_Draw_Scope     ui.o
    0x00004328   0x00004328   0x00000130   Code   RO          640    i.UI_Draw_Screen    ui.o
    0x00004458   0x00004458   0x0000009c   Code   RO          642    i.UI_Identify_Field  ui.o
    0x000044f4   0x000044f4   0x00000114   Code   RO          643    i.UI_Process_Touch  ui.o
    0x00004608   0x00004608   0x00000050   Code   RO          645    i.UI_Update_Field_Values  ui.o
    0x00004658   0x00004658   0x00000070   Code   RO           15    i.Update_Set_Current  control.o
    0x000046c8   0x000046c8   0x0000000e   Code   RO         1888    i._is_digit         c_p.l(__printf_wp.o)
    0x000046d6   0x000046d6   0x00000002   PAD
    0x000046d8   0x000046d8   0x00000030   Code   RO         1239    i._mutex_acquire    rtx_lib.o
    0x00004708   0x00004708   0x0000000a   Code   RO         1240    i._mutex_free       rtx_lib.o
    0x00004712   0x00004712   0x00000022   Code   RO         1241    i._mutex_initialize  rtx_lib.o
    0x00004734   0x00004734   0x0000002c   Code   RO         1242    i._mutex_release    rtx_lib.o
    0x00004760   0x00004760   0x00000008   Code   RO         1243    i._platform_post_stackheap_init  rtx_lib.o
    0x00004768   0x00004768   0x00000064   Code   RO          329    i.main              main.o
    0x000047cc   0x000047cc   0x00000002   Code   RO         1320    i.osRtxErrorNotify  rtx_config.o
    0x000047ce   0x000047ce   0x00000002   PAD
    0x000047d0   0x000047d0   0x00000010   Code   RO         1321    i.osRtxIdleThread   rtx_config.o
    0x000047e0   0x000047e0   0x00000050   Code   RO          717    i.request_conversion  adc.o
    0x00004830   0x00004830   0x0000008c   Code   RO         1925    x$fpl$fadd          fz_ps.l(faddsub.o)
    0x000048bc   0x000048bc   0x000000b0   Code   RO         1940    x$fpl$fmul          fz_ps.l(fmul.o)
    0x0000496c   0x0000496c   0x00000058   Code   RO         1942    x$fpl$frleqf        fz_ps.l(frlef.o)
    0x000049c4   0x000049c4   0x000000d0   Code   RO         1927    x$fpl$fsub          fz_ps.l(faddsub.o)
    0x00004a94   0x00004a94   0x00000000   Code   RO         1976    x$fpl$usenofp       fz_ps.l(usenofp.o)
    0x00004a94   0x00004a94   0x0000007c   Data   RO          488    .constdata          threads.o
    0x00004b10   0x00004b10   0x00000024   Data   RO          761    .constdata          fault.o
    0x00004b34   0x00004b34   0x00000ef7   Data   RO          941    .constdata          lucida_12x19.o
    0x00005a2b   0x00005a2b   0x0000008e   Data   RO          978    .constdata          st7789.o
    0x00005ab9   0x00005ab9   0x00000003   PAD
    0x00005abc   0x00005abc   0x00000020   Data   RO         1221    .constdata          region.o
    0x00005adc   0x00005adc   0x00000004   Data   RO         1222    .constdata          region.o
    0x00005ae0   0x00005ae0   0x00000024   Data   RO         1253    .constdata          rtx_lib.o
    0x00005b04   0x00005b04   0x00000024   Data   RO         1254    .constdata          rtx_lib.o
    0x00005b28   0x00005b28   0x00000018   Data   RO         1255    .constdata          rtx_lib.o
    0x00005b40   0x00005b40   0x00000004   Data   RO         1256    .constdata          rtx_lib.o
    0x00005b44   0x00005b44   0x00000011   Data   RO         1891    .constdata          c_p.l(__printf_flags_wp.o)
    0x00005b55   0x00005b55   0x00000003   PAD
    0x00005b58   0x00005b58   0x0000000a   Data   RO          489    .conststring        threads.o
    0x00005b62   0x00005b62   0x00000002   PAD
    0x00005b64   0x00005b64   0x000000a0   Data   RO         1259    .rodata             rtx_lib.o
    0x00005c04   0x00005c04   0x0000000b   Data   RO         1445    .rodata.str1.4      RTX_CM0.lib(rtx_kernel.o)
    0x00005c0f   0x00005c0f   0x00000001   PAD
    0x00005c10   0x00005c10   0x00000020   Data   RO         2173    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x1ffff000, Load base: 0x00005c30, Size: 0x0000182c, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00000168])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x1ffff000   COMPRESSED   0x00001000   Data   RW         1244    .bss.os             rtx_lib.o
    0x20000000   COMPRESSED   0x00000040   Data   RW         1245    .bss.os             rtx_lib.o
    0x20000040   COMPRESSED   0x00000034   Data   RW         1247    .bss.os.msgqueue.cb  rtx_lib.o
    0x20000074   COMPRESSED   0x00000050   Data   RW         1248    .bss.os.msgqueue.mem  rtx_lib.o
    0x200000c4   COMPRESSED   0x00000044   Data   RW         1249    .bss.os.thread.cb   rtx_lib.o
    0x20000108   COMPRESSED   0x00000044   Data   RW         1250    .bss.os.thread.cb   rtx_lib.o
    0x2000014c   COMPRESSED   0x00000004   PAD
    0x20000150   COMPRESSED   0x00000100   Data   RW         1251    .bss.os.thread.stack  rtx_lib.o
    0x20000250   COMPRESSED   0x00000100   Data   RW         1252    .bss.os.thread.stack  rtx_lib.o
    0x20000350   COMPRESSED   0x00000074   Data   RW           17    .data               control.o
    0x200003c4   COMPRESSED   0x00000014   Data   RW          217    .data               dma.o
    0x200003d8   COMPRESSED   0x00000001   Data   RW          330    .data               main.o
    0x200003d9   COMPRESSED   0x00000003   PAD
    0x200003dc   COMPRESSED   0x00000010   Data   RW          490    .data               threads.o
    0x200003ec   COMPRESSED   0x00000004   Data   RW          492    .data               threads.o
    0x200003f0   COMPRESSED   0x00000008   Data   RW          562    .data               timers.o
    0x200003f8   COMPRESSED   0x000002e0   Data   RW          648    .data               ui.o
    0x200006d8   COMPRESSED   0x00000028   Data   RW          720    .data               adc.o
    0x20000700   COMPRESSED   0x0000000f   Data   RW          762    .data               fault.o
    0x2000070f   COMPRESSED   0x00000001   PAD
    0x20000710   COMPRESSED   0x00000014   Data   RW          868    .data               lcd_text.o
    0x20000724   COMPRESSED   0x00000028   Data   RW         1096    .data               touchscreen.o
    0x2000074c   COMPRESSED   0x00000003   Data   RW         1135    .data               colors.o
    0x2000074f   COMPRESSED   0x00000003   Data   RW         1136    .data               colors.o
    0x20000752   COMPRESSED   0x00000003   Data   RW         1137    .data               colors.o
    0x20000755   COMPRESSED   0x00000003   Data   RW         1138    .data               colors.o
    0x20000758   COMPRESSED   0x00000003   Data   RW         1140    .data               colors.o
    0x2000075b   COMPRESSED   0x00000003   Data   RW         1143    .data               colors.o
    0x2000075e   COMPRESSED   0x00000003   Data   RW         1149    .data               colors.o
    0x20000761   COMPRESSED   0x00000003   Data   RW         1150    .data               colors.o
    0x20000764   COMPRESSED   0x00000003   Data   RW         1151    .data               colors.o
    0x20000767   COMPRESSED   0x00000003   Data   RW         1152    .data               colors.o
    0x2000076a   COMPRESSED   0x00000002   PAD
    0x2000076c   COMPRESSED   0x00000004   Data   RW         1171    .data               profile.o
    0x20000770   COMPRESSED   0x00000004   Data   RW         1172    .data               profile.o
    0x20000774   COMPRESSED   0x00000004   Data   RW         1173    .data               profile.o
    0x20000778   COMPRESSED   0x00000001   Data   RW         1174    .data               profile.o
    0x20000779   COMPRESSED   0x00000003   PAD
    0x2000077c   COMPRESSED   0x00000004   Data   RW         1223    .data               region.o
    0x20000780   COMPRESSED   0x00000001   Data   RW         1258    .data               rtx_lib.o
    0x20000781   COMPRESSED   0x00000003   PAD
    0x20000784   COMPRESSED   0x00000004   Data   RW         1362    .data               system_mkl25z4.o
    0x20000788   COMPRESSED   0x000000a4   Data   RW         1446    .data.os            RTX_CM0.lib(rtx_kernel.o)


    Execution Region ER_ZI (Exec base: 0x2000082c, Load base: 0x00005d98, Size: 0x000013bc, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2000082c   0x00005d98   0x000000d4   PAD
    0x20000900        -       0x00000f80   Zero   RW           16    .bss                control.o
    0x20001880        -       0x00000060   Zero   RW         2031    .bss                c_p.l(libspace.o)
    0x200018e0        -       0x00000001   Zero   RW         1849    .bss.PendST         RTX_CM0.lib(os_systick.o)
    0x200018e1   0x00005d98   0x00000007   PAD
    0x200018e8        -       0x00000000   Zero   RW         1349    HEAP                startup_mkl25z4.o
    0x200018e8        -       0x00000300   Zero   RW         1348    STACK               startup_mkl25z4.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       364         66          0         40          0       3790   adc.o
         0          0          0         30          0       1217   colors.o
       984        114          0        116       3968     236400   control.o
       184         26          0          0          0        561   debug.o
        24          4          0          0          0        872   delay.o
       132         30          0         20          0     224832   dma.o
       428        112         36         15          0      11421   fault.o
        30          0          0          0          0       1593   fx.o
       564          0          0          0          0       5362   lcd_graphics.o
       652         56          0         20          0       6374   lcd_text.o
       164         30          0          0          0       1143   leds.o
         0          0       3831          0          0        630   lucida_12x19.o
       100         14          0          1          0       4474   main.o
         0          0          0         13          0        442   profile.o
         0          0         36          4          0       1174   region.o
        18          6          0          0          0        973   rtx_config.o
       144          8        260       4941          0      12258   rtx_lib.o
        16          6          0          0          0        436   sound.o
      1916         82        142          0          0       8790   st7789.o
        80         44        192          0        768        956   startup_mkl25z4.o
       232         48          0          4          0        899   system_mkl25z4.o
       158         40        134         20          0       7105   threads.o
       436         86          0          8          0       4341   timers.o
       452         22          0         40          0       2660   touchscreen.o
      1132        128          0        736          0       7179   ui.o

    ----------------------------------------------------------------------
      8216        922       4668       6024       4736     545882   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         6          0          5         16          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       164          8          0          0          0        500   irq_cm0.o
       138         32          0          0          1       2769   os_systick.o
        58          4          0          0          0       2723   rtx_delay.o
       670         56         11        164          0      16196   rtx_kernel.o
       248          0          0          0          0       2674   rtx_memory.o
       164          0          0          0          0      14367   rtx_mempool.o
      1554         44          0          0          0      18006   rtx_msgqueue.o
       924         32          0          0          0       9526   rtx_mutex.o
       360         26          0          0          0       4670   rtx_system.o
      2044        116          0          0          0      31262   rtx_thread.o
       232         20          0          0          0      10004   rtx_timer.o
        86          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
       312          6         17          0          0         76   __printf_flags_wp.o
        14          0          0          0          0         60   __printf_wp.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        46          0          0          0          0        100   _printf_char.o
        48          6          0          0          0         88   _printf_char_common.o
        10          0          0          0          0          0   _printf_d.o
       108         18          0          0          0         76   _printf_dec.o
       176          0          0          0          0         84   _printf_intcommon.o
        78          0          0          0          0        100   _printf_pad.o
         2          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
        10          0          0          0          0          0   _printf_s.o
        82          0          0          0          0         72   _printf_str.o
        16          0          0          0          0         60   _snputc.o
        10          0          0          0          0         60   _sputc.o
       488          0          0          0          0         92   aeabi_sdivfast.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        48          0          0          0          0         72   llmul.o
        56          6          0          0          0         84   noretval__2snprintf.o
        40          4          0          0          0         84   noretval__2sprintf.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        40          0          0          0          0         60   rtudiv10.o
        68          6          0          0          0         72   strlen.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        46          0          0          0          0         60   cmpret.o
       108         10          0          0          0         72   dfixi.o
        88          0          0          0          0         92   dflti.o
       584         26          0          0          0         84   dmul.o
       348          8          0          0          0        160   faddsub.o
       100          4          0          0          0         68   fcmpin.o
        76          0          0          0          0         68   ffixi.o
        48          0          0          0          0         60   ffixui.o
        94          0          0          0          0         92   fflti.o
       176          4          0          0          0         80   fmul.o
        16          6          0          0          0         68   fnan2.o
        88          4          0          0          0         76   frlef.o
        94          0          0          0          0         68   retnan.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
     10684        462         32        164        316     115785   Library Totals
        22          0          4          0        219          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      6556        338         11        164          1     112697   RTX_CM0.lib
      2240         62         17          0         96       2040   c_p.l
      1866         62          0          0          0       1048   fz_ps.l

    ----------------------------------------------------------------------
     10684        462         32        164        316     115785   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     18900       1384       4700       6188       5052     657375   Grand Totals
     18900       1384       4700        360       5052     657375   ELF Image Totals (compressed)
     18900       1384       4700        360          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                23600 (  23.05kB)
    Total RW  Size (RW Data + ZI Data)             11240 (  10.98kB)
    Total ROM Size (Code + RO Data + RW Data)      23960 (  23.40kB)

==============================================================================

